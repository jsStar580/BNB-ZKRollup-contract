{
	"id": "891150e08f9f788a58825ca87a16babe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ZNSFIFSRegistrar.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\n\npragma solidity ^0.7.6;\n\nimport \"./ZNS.sol\";\nimport \"./IBaseRegistrar.sol\";\nimport \"./Ownable.sol\";\nimport \"./utils/Names.sol\";\n\n/**\n * ZNSFIFSRegistrar is a registrar allocating subdomain names to users in Zecrey-Legend in a FIFS way.\n */\ncontract ZNSFIFSRegistrar is IBaseRegistrar, Ownable {\n\n    using Names for string;\n\n    // ZNS registry\n    ZNS public zns;\n    // The nodehash/namehash of the root node this registrar owns (eg, .legend)\n    bytes32 public baseNode;\n    // A map of addresses that are authorized to controll the registrar(eg, register names)\n    mapping(address => bool) public controllers;\n    // A map to record the L2 owner of each node. A L2 owner can own only 1 name.\n    // zecreyPubKey => nodeHash\n    mapping(bytes32 => bytes32) ZNSZecreyPubKeyMapper;\n\n    modifier onlyController {\n        require(controllers[msg.sender]);\n        _;\n    }\n\n    modifier live {\n        require(zns.owner(baseNode) == address(this));\n        _;\n    }\n\n    //    constructor(ZNS _zns, bytes32 _node) {\n    //        zns = _zns;\n    //        baseNode = _node;\n    //\n    //        controllers[msg.sender] = true;\n    //    }\n\n    function initialize(bytes calldata initializationParameters) external {\n        (address _znsAddr, bytes32 _node) = abi.decode(initializationParameters, (address, bytes32));\n        zns = ZNS(_znsAddr);\n        baseNode = _node;\n        controllers[msg.sender] = true;\n    }\n\n    // Authorizes a controller, who can control this registrar.\n    function addController(address _controller) external override onlyOwner {\n        controllers[_controller] = true;\n        emit ControllerAdded(_controller);\n    }\n\n    // Revoke controller permission for an address.\n    function removeController(address _controller) external override onlyOwner {\n        controllers[_controller] = false;\n        emit ControllerRemoved(_controller);\n    }\n\n    // Set resolver for the node this registrar manages.\n    // This msg.sender must be the owner of base node.\n    function setThisResolver(address _resolver) external override onlyOwner {\n        zns.setResolver(baseNode, _resolver);\n    }\n\n    // Set L2 owner for the node this registrar manages.\n    // This msg.sender must be the owner of base node.\n    function setZecreyPubKey(bytes32 _zecreyPubKey) external override onlyOwner {\n        zns.setZecreyPubKey(baseNode, _zecreyPubKey);\n    }\n\n    function getOwner(bytes32 node) external view returns (address){\n        return zns.owner(node);\n    }\n\n    /**\n     * @dev Register a new node under base node if it not exists.\n     * @param _name The plaintext of the name to register\n     * @param _owner The address to receive this name\n     * @param _zecreyPubKey The L2 owner to receive this name\n     */\n    function registerZNS(string calldata _name, address _owner, bytes32 _zecreyPubKey) external override onlyController {\n        // Check if this name is valid\n        require(_valid(_name), \"invalid name\");\n        // This L2 owner should not own any name before\n        require(_validZecreyPubKey(_zecreyPubKey), \"L2 owner existed\");\n\n        // Get the name hash\n        bytes32 label = keccak256(bytes(_name));\n        // This subnode should not be registered before\n        require(!zns.subNodeRecordExists(baseNode, label), \"subnode existed\");\n\n        bytes32 subnode = zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey);\n\n        // Update L2 owner mapper\n        ZNSZecreyPubKeyMapper[_zecreyPubKey] = subnode;\n\n        emit ZNSRegistered(_name, subnode, _owner, _zecreyPubKey);\n    }\n\n    function _valid(string memory _name) internal pure returns (bool) {\n        return _validCharset(_name) && _validLength(_name);\n    }\n\n    function _validCharset(string memory _name) internal pure returns (bool) {\n        return _name.charsetValid();\n    }\n\n    function _validLength(string memory _name) internal pure returns (bool) {\n        return _name.strlen() >= 3 && _name.strlen() <= 32;\n    }\n\n    function _validZecreyPubKey(bytes32 _zecreyPubKey) internal view returns (bool) {\n        return ZNSZecreyPubKeyMapper[_zecreyPubKey] == 0x0;\n    }\n}\n"
			},
			"contracts/utils/Names.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\n\npragma solidity ^0.7.6;\n\nlibrary Names {\n\n    /**\n     * @dev Returns the length of a given string, the length of each byte is self defined\n     * @param s The string to measure the length of\n     * @return The length of the input string\n     */\n    function strlen(string memory s) internal pure returns (uint) {\n        uint len;\n        uint i = 0;\n        uint bytelength = bytes(s).length;\n        for(len = 0; i < bytelength; len++) {\n            bytes1 b = bytes(s)[i];\n            if(b <= 0x80) {\n                i += 1;\n            } else if (b < 0xE0) {\n                i += 2;\n            } else if (b < 0xF0) {\n                i += 3;\n            } else if (b < 0xF8) {\n                i += 4;\n            } else if (b < 0xFC) {\n                i += 5;\n            } else {\n                i += 6;\n            }\n        }\n        return len;\n    }\n\n    /**\n     * @dev Returns if the char in this string is valid, the valid char set is self defined\n     * @param s The string to validate\n     * @return The length of the input string\n     */\n    function charsetValid(string memory s) internal pure returns (bool) {\n        uint bytelength = bytes(s).length;\n        for(uint i = 0; i < bytelength; i++) {\n            bytes1 b = bytes(s)[i];\n            if(!isValidCharacter(b)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // Only supports lowercase letters and digital number\n    function isValidCharacter(bytes1 bs) internal pure returns (bool) {\n        return (bs <= 0x39 && bs >= 0x30)       // number\n                || (bs <= 0x7A && bs >= 0x61);  // lowercase letter\n    }\n}\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\n\npragma solidity ^0.7.6;\n\ncontract Ownable {\n\n    address public owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    modifier onlyOwner {\n        require(isOwner(msg.sender));\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    function isOwner(address addr) public view returns (bool) {\n        return owner == addr;\n    }\n}\n"
			},
			"contracts/IBaseRegistrar.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\n\npragma solidity ^0.7.6;\n\ninterface IBaseRegistrar {\n\n    event ControllerAdded(address indexed controller);\n\n    event ControllerRemoved(address indexed controller);    // Notify a new owner of one name.\n\n    // Notify a node is registered.\n    event ZNSRegistered(string name, bytes32 node, address owner, bytes32 L2Owner);\n\n    // Notify a sub account name is registered to a account with its account public key in L2.\n    // event ZNSRegisterSubName(string name, bytes32 childNameHash, bytes32 parentNameHash, address to, bytes32 toL2Account);\n\n    // Notify one name is transferred from one account to another.\n    // event ZNSTransfer(bytes32 nameHash, address from, bytes32 fromL2Account, address to, bytes32 toL2Account);\n\n    // Notify one name is transferred from one L2 account to another L2 account.\n    // event ZNSL2Transfer(bytes32 name, address owner, bytes32 from, bytes32 to);\n\n    // Authorizes a controller, who can control this registrar.\n    function addController(address controller) external;\n\n    // Revoke controller permission for an address.\n    function removeController(address controller) external;\n\n    // Set resolver for the node this registrar manages.\n    function setThisResolver(address resolver) external;\n\n    // Set L2 owner for the node this registrar manages.\n    function setZecreyPubKey(bytes32 zecreyPubKey) external;\n\n    // Register a node under the base node.\n    function registerZNS(string calldata _name, address _owner, bytes32 zecreyPubKey) external;\n}\n"
			},
			"contracts/ZNS.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\n\npragma solidity ^0.7.6;\n\ninterface ZNS {\n\n    // Logged when a node has new owner\n    // Note that node is a namehash of a specified node, label is a namehash of subnode.\n    event NewOwner(bytes32 indexed node, address owner);\n\n    // Logged when the L2 owner of a node transfers ownership to a new L2 account.\n    event NewZecreyPubKey(bytes32 indexed node, bytes32 zecreyPubKey);\n\n    // Logged when the resolver for a node changes.\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    function setRecord(\n        bytes32 _node,\n        address _owner,\n        bytes32 _zecreyPubKey,\n        address _resolver\n    ) external;\n\n    function setSubnodeRecord(\n        bytes32 _node,\n        bytes32 _label,\n        address _owner,\n        bytes32 _zecreyPubKey,\n        address _resolver\n    ) external returns (bytes32);\n\n    function setSubnodeOwner(\n        bytes32 _node,\n        bytes32 _label,\n        address _owner,\n        bytes32 _zecreyPubKey\n    ) external returns (bytes32);\n\n    function setResolver(bytes32 _node, address _resolver) external;\n\n    function setOwner(bytes32 _node, address _owner) external;\n\n    function setZecreyPubKey(bytes32 _node, bytes32 _zecreyPubKey) external;\n\n    function resolver(bytes32 node) external view returns (address);\n\n    function owner(bytes32 node) external view returns (address);\n\n    function zecreyPubKey(bytes32 node) external view returns (bytes32);\n\n    function recordExists(bytes32 node) external view returns (bool);\n\n    function subNodeRecordExists(bytes32 node, bytes32 label) external view returns (bool);\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IBaseRegistrar.sol": {
				"IBaseRegistrar": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "ControllerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "ControllerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "L2Owner",
									"type": "bytes32"
								}
							],
							"name": "ZNSRegistered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "addController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "registerZNS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "removeController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "setThisResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "setZecreyPubKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addController(address)": "a7fc7a07",
							"registerZNS(string,address,bytes32)": "d7757da1",
							"removeController(address)": "f6a74ed7",
							"setThisResolver(address)": "7a0d942b",
							"setZecreyPubKey(bytes32)": "5b817475"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"L2Owner\",\"type\":\"bytes32\"}],\"name\":\"ZNSRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"registerZNS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setThisResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"setZecreyPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBaseRegistrar.sol\":\"IBaseRegistrar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBaseRegistrar.sol\":{\"keccak256\":\"0x0b9cc2c012c58eab5422ed9c1fe9e58d8b15b13d013f836bd5d2af6a9fc11f27\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://56cbc0b53528b24aa8ae3e5916bb6f8b247c8f27b46e085dd561bce7c7022dc3\",\"dweb:/ipfs/QmQ6x181Yetu66Lm7bgU5twczS2HuNdBYrtSQNQLuY2DC5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":72:599  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":294:343  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":318:323  owner */\n  0x00\n    /* \"contracts/Ownable.sol\":318:336  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Ownable.sol\":326:336  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":318:336  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Ownable.sol\":72:599  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":72:599  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2f54bf6e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":502:597  function isOwner(address addr) public view returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_8\n      jump\t// in\n    tag_6:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":96:116  address public owner */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":349:496  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/Ownable.sol\":502:597  function isOwner(address addr) public view returns (bool) {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":554:558  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":577:582  owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":577:590  owner == addr */\n      swap2\n      dup3\n      and\n        /* \"contracts/Ownable.sol\":577:582  owner */\n      swap2\n      and\n        /* \"contracts/Ownable.sol\":577:590  owner == addr */\n      eq\n      swap1\n        /* \"contracts/Ownable.sol\":502:597  function isOwner(address addr) public view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":96:116  address public owner */\n    tag_10:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":349:496  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_13:\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      tag_16\n        /* \"contracts/Ownable.sol\":258:268  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":250:257  isOwner */\n      tag_8\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/Ownable.sol\":242:270  require(isOwner(msg.sender)) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"contracts/Ownable.sol\":447:452  owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/Ownable.sol\":426:463  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/Ownable.sol\":447:452  owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/Ownable.sol\":426:463  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/Ownable.sol\":473:478  owner */\n      0x00\n        /* \"contracts/Ownable.sol\":473:489  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Ownable.sol\":349:496  function transferOwnership(address newOwner) public onlyOwner {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201949004b6bdf6376b564718463effc239ee81126fddad4753e13c2ea74cf93f664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610192806100326000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632f54bf6e146100465780638da5cb5b14610080578063f2fde38b146100a4575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100cc565b604080519115158252519081900360200190f35b6100886100e0565b604080516001600160a01b039092168252519081900360200190f35b6100ca600480360360208110156100ba57600080fd5b50356001600160a01b03166100ef565b005b6000546001600160a01b0391821691161490565b6000546001600160a01b031681565b6100f8336100cc565b61010157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea26469706673582212201949004b6bdf6376b564718463effc239ee81126fddad4753e13c2ea74cf93f664736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x192 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF8 CALLER PUSH2 0xCC JUMP JUMPDEST PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x49 STOP 0x4B PUSH12 0xDF6376B564718463EFFC239E 0xE8 GT 0x26 REVERT 0xDA 0xD4 PUSH22 0x3E13C2EA74CF93F664736F6C63430007060033000000 ",
							"sourceMap": "72:527:1:-:0;;;294:49;;;;;;;;;-1:-1:-1;318:5:1;:18;;-1:-1:-1;;;;;;318:18:1;326:10;318:18;;;72:527;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632f54bf6e146100465780638da5cb5b14610080578063f2fde38b146100a4575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100cc565b604080519115158252519081900360200190f35b6100886100e0565b604080516001600160a01b039092168252519081900360200190f35b6100ca600480360360208110156100ba57600080fd5b50356001600160a01b03166100ef565b005b6000546001600160a01b0391821691161490565b6000546001600160a01b031681565b6100f8336100cc565b61010157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea26469706673582212201949004b6bdf6376b564718463effc239ee81126fddad4753e13c2ea74cf93f664736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF8 CALLER PUSH2 0xCC JUMP JUMPDEST PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x49 STOP 0x4B PUSH12 0xDF6376B564718463EFFC239E 0xE8 GT 0x26 REVERT 0xDA 0xD4 PUSH22 0x3E13C2EA74CF93F664736F6C63430007060033000000 ",
							"sourceMap": "72:527:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:95;;;;;;;;;;;;;;;;-1:-1:-1;502:95:1;-1:-1:-1;;;;;502:95:1;;:::i;:::-;;;;;;;;;;;;;;;;;;96:20;;;:::i;:::-;;;;-1:-1:-1;;;;;96:20:1;;;;;;;;;;;;;;349:147;;;;;;;;;;;;;;;;-1:-1:-1;349:147:1;-1:-1:-1;;;;;349:147:1;;:::i;:::-;;502:95;554:4;577:5;-1:-1:-1;;;;;577:13:1;;;:5;;:13;;502:95::o;96:20::-;;;-1:-1:-1;;;;;96:20:1;;:::o;349:147::-;250:19;258:10;250:7;:19::i;:::-;242:28;;;;;;447:5:::1;::::0;;426:37:::1;::::0;-1:-1:-1;;;;;426:37:1;;::::1;::::0;447:5;::::1;::::0;426:37:::1;::::0;::::1;473:5;:16:::0;;-1:-1:-1;;;;;;473:16:1::1;-1:-1:-1::0;;;;;473:16:1;;;::::1;::::0;;;::::1;::::0;;349:147::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80400",
								"executionCost": "20964",
								"totalCost": "101364"
							},
							"external": {
								"isOwner(address)": "1075",
								"owner()": "1037",
								"transferOwnership(address)": "24328"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 599,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 343,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 343,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 294,
									"end": 343,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 318,
									"end": 323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 336,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 326,
									"end": 336,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 599,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 599,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 599,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 599,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 72,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 599,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201949004b6bdf6376b564718463effc239ee81126fddad4753e13c2ea74cf93f664736f6c63430007060033",
									".code": [
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "2F54BF6E"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 599,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 582,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 577,
											"end": 582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 250,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 250,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 426,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 473,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isOwner(address)": "2f54bf6e",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x4a7b7d2ab0364f6bce20df0a87ec6ac6138172b04e551fc665d36112eeeb5869\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://70a62c43a9a7880b631fc6d50e4b5d9fa9d4ed0ff66a79725d49cbaae06e34e2\",\"dweb:/ipfs/QmdRePNZLkt2QGgYS9fqAkGUJvvYLBKVdcLbtDCMJDVWJZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 53,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ZNS.sol": {
				"ZNS": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "NewOwner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								}
							],
							"name": "NewResolver",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "NewZecreyPubKey",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "recordExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "resolver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_zecreyPubKey",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_resolver",
									"type": "address"
								}
							],
							"name": "setRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_resolver",
									"type": "address"
								}
							],
							"name": "setResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "setSubnodeOwner",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_label",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_zecreyPubKey",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_resolver",
									"type": "address"
								}
							],
							"name": "setSubnodeRecord",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "setZecreyPubKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "label",
									"type": "bytes32"
								}
							],
							"name": "subNodeRecordExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "zecreyPubKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner(bytes32)": "02571be3",
							"recordExists(bytes32)": "f79fe538",
							"resolver(bytes32)": "0178b8bf",
							"setOwner(bytes32,address)": "5b0fc9c3",
							"setRecord(bytes32,address,bytes32,address)": "dc480396",
							"setResolver(bytes32,address)": "1896f70a",
							"setSubnodeOwner(bytes32,bytes32,address,bytes32)": "e4c28278",
							"setSubnodeRecord(bytes32,bytes32,address,bytes32,address)": "91d682fc",
							"setZecreyPubKey(bytes32,bytes32)": "86d5f0d9",
							"subNodeRecordExists(bytes32,bytes32)": "212a6bcd",
							"zecreyPubKey(bytes32)": "ebcb34ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"NewZecreyPubKey\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"recordExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_zecreyPubKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"setSubnodeOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_label\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_zecreyPubKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setSubnodeRecord\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"setZecreyPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"label\",\"type\":\"bytes32\"}],\"name\":\"subNodeRecordExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"zecreyPubKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZNS.sol\":\"ZNS\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ZNS.sol\":{\"keccak256\":\"0x20229f553c6f4e2ff1c1ab2b10b56d3d65304cdc0b928f864a4db931441759d6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bdee2fb7d4749e35db1be63ced699199a47300db22007038f9d3fe3b030df9bc\",\"dweb:/ipfs/QmTHbNvnAEzgArKc9ohjNZMCHczkY3zRcMAC7VMX5c7PrR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ZNSFIFSRegistrar.sol": {
				"ZNSFIFSRegistrar": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "ControllerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "controller",
									"type": "address"
								}
							],
							"name": "ControllerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "L2Owner",
									"type": "bytes32"
								}
							],
							"name": "ZNSRegistered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_controller",
									"type": "address"
								}
							],
							"name": "addController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseNode",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "controllers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "node",
									"type": "bytes32"
								}
							],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "initializationParameters",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "registerZNS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_controller",
									"type": "address"
								}
							],
							"name": "removeController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_resolver",
									"type": "address"
								}
							],
							"name": "setThisResolver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_zecreyPubKey",
									"type": "bytes32"
								}
							],
							"name": "setZecreyPubKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "zns",
							"outputs": [
								{
									"internalType": "contract ZNS",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"registerZNS(string,address,bytes32)": {
								"details": "Register a new node under base node if it not exists.",
								"params": {
									"_name": "The plaintext of the name to register",
									"_owner": "The address to receive this name",
									"_zecreyPubKey": "The L2 owner to receive this name"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ZNSFIFSRegistrar.sol\":287:4155  contract ZNSFIFSRegistrar is IBaseRegistrar, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":318:323  owner */\n  0x00\n    /* \"contracts/Ownable.sol\":318:336  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Ownable.sol\":326:336  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":318:336  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/ZNSFIFSRegistrar.sol\":287:4155  contract ZNSFIFSRegistrar is IBaseRegistrar, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ZNSFIFSRegistrar.sol\":287:4155  contract ZNSFIFSRegistrar is IBaseRegistrar, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa7fc7a07\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xddf7fcb0\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xddf7fcb0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdeb931a2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf6a74ed7\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0xa7fc7a07\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd7757da1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xda8c229e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x2f54bf6e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x439fab91\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x58ffb7fd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5b817475\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7a0d942b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":502:597  function isOwner(address addr) public view returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1192:1466  function initialize(bytes calldata initializationParameters) external {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_26\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":396:410  ZNS public zns */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2287:2424  function setZecreyPubKey(bytes32 _zecreyPubKey) external override onlyOwner {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2044:2169  function setThisResolver(address _resolver) external override onlyOwner {... */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_34\n      jump\t// in\n        /* \"contracts/Ownable.sol\":96:116  address public owner */\n    tag_8:\n      tag_27\n      tag_36\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1536:1699  function addController(address _controller) external override onlyOwner {... */\n    tag_9:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_39\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2794:3593  function registerZNS(string calldata _name, address _owner, bytes32 _zecreyPubKey) external override onlyController {... */\n    tag_10:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":617:660  mapping(address => bool) public controllers */\n    tag_11:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":496:519  bytes32 public baseNode */\n    tag_12:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2430:2532  function getOwner(bytes32 node) external view returns (address){... */\n    tag_13:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      calldataload\n      tag_53\n      jump\t// in\n        /* \"contracts/Ownable.sol\":349:496  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_14:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_56\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1757:1926  function removeController(address _controller) external override onlyOwner {... */\n    tag_15:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_59\n      jump\t// in\n        /* \"contracts/Ownable.sol\":502:597  function isOwner(address addr) public view returns (bool) {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":554:558  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":577:582  owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":577:590  owner == addr */\n      dup3\n      dup2\n      and\n        /* \"contracts/Ownable.sol\":577:582  owner */\n      swap2\n      and\n        /* \"contracts/Ownable.sol\":577:590  owner == addr */\n      eq\n        /* \"contracts/Ownable.sol\":502:597  function isOwner(address addr) public view returns (bool) {... */\n    tag_60:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1192:1466  function initialize(bytes calldata initializationParameters) external {... */\n    tag_26:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1273:1289  address _znsAddr */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1291:1304  bytes32 _node */\n      dup1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1319:1343  initializationParameters */\n      dup4\n      dup4\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1308:1364  abi.decode(initializationParameters, (address, bytes32)) */\n      0x40\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1374:1377  zns */\n      0x01\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1374:1393  zns = ZNS(_znsAddr) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1308:1364  abi.decode(initializationParameters, (address, bytes32)) */\n      dup4\n      calldataload\n      and\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1374:1393  zns = ZNS(_znsAddr) */\n      or\n      dup2\n      sstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1308:1364  abi.decode(initializationParameters, (address, bytes32)) */\n      0x20\n      swap2\n      dup3\n      add\n      calldataload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1403:1411  baseNode */\n      0x02\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1403:1419  baseNode = _node */\n      sstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1441:1451  msg.sender */\n      caller\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1374:1377  zns */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1429:1452  controllers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1429:1440  controllers */\n      0x03\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1429:1452  controllers[msg.sender] */\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1308:1364  abi.decode(initializationParameters, (address, bytes32)) */\n      0x40\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1429:1452  controllers[msg.sender] */\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1429:1459  controllers[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1192:1466  function initialize(bytes calldata initializationParameters) external {... */\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":396:410  ZNS public zns */\n    tag_28:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2287:2424  function setZecreyPubKey(bytes32 _zecreyPubKey) external override onlyOwner {... */\n    tag_31:\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      tag_64\n        /* \"contracts/Ownable.sol\":258:268  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":250:257  isOwner */\n      tag_20\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/Ownable.sol\":242:270  require(isOwner(msg.sender)) */\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2376  zns */\n      sload(0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2393:2401  baseNode */\n      sload(0x02)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2417  zns.setZecreyPubKey(baseNode, _zecreyPubKey) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x86d5f0d9)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x24\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2376  zns */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2392  zns.setZecreyPubKey */\n      0x86d5f0d9\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2417  zns.setZecreyPubKey(baseNode, _zecreyPubKey) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2376  zns */\n      0x00\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2417  zns.setZecreyPubKey(baseNode, _zecreyPubKey) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2376  zns */\n      dup4\n      dup8\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2373:2417  zns.setZecreyPubKey(baseNode, _zecreyPubKey) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2287:2424  function setZecreyPubKey(bytes32 _zecreyPubKey) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2044:2169  function setThisResolver(address _resolver) external override onlyOwner {... */\n    tag_34:\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      tag_71\n        /* \"contracts/Ownable.sol\":258:268  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":250:257  isOwner */\n      tag_20\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Ownable.sol\":242:270  require(isOwner(msg.sender)) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2129  zns */\n      sload(0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2142:2150  baseNode */\n      sload(0x02)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2162  zns.setResolver(baseNode, _resolver) */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x0c4b7b85)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x24\n      dup5\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2129  zns */\n      swap3\n      and\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2141  zns.setResolver */\n      0x1896f70a\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2162  zns.setResolver(baseNode, _resolver) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2129  zns */\n      0x00\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2162  zns.setResolver(baseNode, _resolver) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2129  zns */\n      dup4\n      dup8\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2126:2162  zns.setResolver(baseNode, _resolver) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":96:116  address public owner */\n    tag_36:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1536:1699  function addController(address _controller) external override onlyOwner {... */\n    tag_39:\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      tag_78\n        /* \"contracts/Ownable.sol\":258:268  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":250:257  isOwner */\n      tag_20\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Ownable.sol\":242:270  require(isOwner(msg.sender)) */\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1618:1642  controllers[_controller] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1618:1629  controllers */\n      0x03\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1618:1642  controllers[_controller] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1618:1649  controllers[_controller] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1645:1649  true */\n      0x01\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1618:1649  controllers[_controller] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1664:1692  ControllerAdded(_controller) */\n      mload\n      0x0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d7474\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1618:1642  controllers[_controller] */\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1664:1692  ControllerAdded(_controller) */\n      log2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1536:1699  function addController(address _controller) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2794:3593  function registerZNS(string calldata _name, address _owner, bytes32 _zecreyPubKey) external override onlyController {... */\n    tag_45:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":890:900  msg.sender */\n      caller\n        /* \"contracts/ZNSFIFSRegistrar.sol\":878:901  controllers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":878:889  controllers */\n      0x03\n        /* \"contracts/ZNSFIFSRegistrar.sol\":878:901  controllers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ZNSFIFSRegistrar.sol\":870:902  require(controllers[msg.sender]) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2967:2980  _valid(_name) */\n      tag_84\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2974:2979  _name */\n      dup5\n      dup5\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2967:2980  _valid(_name) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2967:2973  _valid */\n      tag_85\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2967:2980  _valid(_name) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2959:2997  require(_valid(_name), \"invalid name\") */\n      tag_86\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x696e76616c6964206e616d65)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_86:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3071:3104  _validZecreyPubKey(_zecreyPubKey) */\n      tag_87\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3090:3103  _zecreyPubKey */\n      dup2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3071:3089  _validZecreyPubKey */\n      tag_88\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3071:3104  _validZecreyPubKey(_zecreyPubKey) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3063:3125  require(_validZecreyPubKey(_zecreyPubKey), \"L2 owner existed\") */\n      tag_89\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x130c881bdddb995c88195e1a5cdd1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3165:3178  bytes32 label */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3197:3202  _name */\n      dup5\n      dup5\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3181:3204  keccak256(bytes(_name)) */\n      mload(0x40)\n      dup1\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x40\n      dup1\n      mload\n      swap2\n      swap1\n      swap4\n      add\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3282  zns */\n      sload(0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3303:3311  baseNode */\n      sload(0x02)\n      shl(0xe0, 0x212a6bcd)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3319  zns.subNodeRecordExists(baseNode, label) */\n      dup5\n      mstore\n      0x04\n      dup5\n      add\n      mstore\n      0x24\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap4\n      mload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3181:3204  keccak256(bytes(_name)) */\n      swap1\n      swap8\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3282  zns */\n      swap1\n      swap4\n      and\n      swap6\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3302  zns.subNodeRecordExists */\n      0x212a6bcd\n      swap5\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3319  zns.subNodeRecordExists(baseNode, label) */\n      0x44\n      dup1\n      dup3\n      add\n      swap5\n      pop\n      0x20\n      swap4\n      swap3\n      pop\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3282  zns */\n      dup7\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3279:3319  zns.subNodeRecordExists(baseNode, label) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      mload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3278:3319  !zns.subNodeRecordExists(baseNode, label) */\n      iszero\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3270:3339  require(!zns.subNodeRecordExists(baseNode, label), \"subnode existed\") */\n      tag_94\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x1cdd589b9bd91948195e1a5cdd1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3371  zns */\n      sload(0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3388:3396  baseNode */\n      sload(0x02)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3427  zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey) */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x1c98504f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x24\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      0x44\n      dup5\n      add\n      mstore\n      0x64\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3350:3365  bytes32 subnode */\n      0x00\n      swap4\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3371  zns */\n      swap2\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3387  zns.setSubnodeOwner */\n      0xe4c28278\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3427  zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey) */\n      0x84\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3350:3365  bytes32 subnode */\n      dup8\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3371  zns */\n      dup8\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3427  zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      mload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3472:3508  ZNSZecreyPubKeyMapper[_zecreyPubKey] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3472:3493  ZNSZecreyPubKeyMapper */\n      0x04\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3427  zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey) */\n      0x20\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3472:3508  ZNSZecreyPubKeyMapper[_zecreyPubKey] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3472:3518  ZNSZecreyPubKeyMapper[_zecreyPubKey] = subnode */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3534:3586  ZNSRegistered(_name, subnode, _owner, _zecreyPubKey) */\n      dup2\n      mload\n      swap1\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      0x80\n      dup1\n      dup3\n      mstore\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3427  zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3534:3586  ZNSRegistered(_name, subnode, _owner, _zecreyPubKey) */\n      0x36e1387993e62301c322576ae290f9934f5eb108709972fb6a5892e18544a08b\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3548:3553  _name */\n      dup8\n      swap1\n      dup8\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3368:3427  zns.setSubnodeOwner(baseNode, label, _owner, _zecreyPubKey) */\n      dup5\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3564:3570  _owner */\n      dup9\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3494:3507  _zecreyPubKey */\n      dup9\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3534:3586  ZNSRegistered(_name, subnode, _owner, _zecreyPubKey) */\n      dup1\n      0xa0\n      dup2\n      add\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3548:3553  _name */\n      dup8\n      dup8\n      dup1\n      dup3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3534:3586  ZNSRegistered(_name, subnode, _owner, _zecreyPubKey) */\n      dup5\n      calldatacopy\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n      mload(0x40)\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap9\n      pop\n      swap1\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      log1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":912:913  _ */\n      pop\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2794:3593  function registerZNS(string calldata _name, address _owner, bytes32 _zecreyPubKey) external override onlyController {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":617:660  mapping(address => bool) public controllers */\n    tag_48:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":496:519  bytes32 public baseNode */\n    tag_50:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2430:2532  function getOwner(bytes32 node) external view returns (address){... */\n    tag_53:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2513  zns */\n      sload(0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2525  zns.owner(node) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x02571be3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2485:2492  address */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2513  zns */\n      and\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2519  zns.owner */\n      0x02571be3\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2525  zns.owner(node) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2513  zns */\n      dup7\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2510:2525  zns.owner(node) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      mload\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":2430:2532  function getOwner(bytes32 node) external view returns (address){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":349:496  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_56:\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      tag_105\n        /* \"contracts/Ownable.sol\":258:268  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":250:257  isOwner */\n      tag_20\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Ownable.sol\":242:270  require(isOwner(msg.sender)) */\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n        /* \"contracts/Ownable.sol\":447:452  owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/Ownable.sol\":426:463  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/Ownable.sol\":447:452  owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/Ownable.sol\":426:463  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/Ownable.sol\":473:478  owner */\n      0x00\n        /* \"contracts/Ownable.sol\":473:489  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Ownable.sol\":349:496  function transferOwnership(address newOwner) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1757:1926  function removeController(address _controller) external override onlyOwner {... */\n    tag_59:\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      tag_109\n        /* \"contracts/Ownable.sol\":258:268  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":250:257  isOwner */\n      tag_20\n        /* \"contracts/Ownable.sol\":250:269  isOwner(msg.sender) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Ownable.sol\":242:270  require(isOwner(msg.sender)) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1842:1866  controllers[_controller] */\n      dup2\n      and\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1869:1874  false */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1842:1866  controllers[_controller] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1842:1853  controllers */\n      0x03\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1842:1866  controllers[_controller] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1842:1874  controllers[_controller] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1889:1919  ControllerRemoved(_controller) */\n      mload\n      0x33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e81113\n      swap2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1869:1874  false */\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1889:1919  ControllerRemoved(_controller) */\n      log2\n        /* \"contracts/ZNSFIFSRegistrar.sol\":1757:1926  function removeController(address _controller) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3599:3732  function _valid(string memory _name) internal pure returns (bool) {... */\n    tag_85:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3659:3663  bool */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3682:3702  _validCharset(_name) */\n      tag_113\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3696:3701  _name */\n      dup3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3682:3695  _validCharset */\n      tag_114\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3682:3702  _validCharset(_name) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3682:3725  _validCharset(_name) && _validLength(_name) */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3706:3725  _validLength(_name) */\n      tag_116\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3719:3724  _name */\n      dup3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3706:3718  _validLength */\n      tag_117\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3706:3725  _validLength(_name) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3675:3725  return _validCharset(_name) && _validLength(_name) */\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3599:3732  function _valid(string memory _name) internal pure returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4006:4153  function _validZecreyPubKey(bytes32 _zecreyPubKey) internal view returns (bool) {... */\n    tag_88:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4080:4084  bool */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4103:4139  ZNSZecreyPubKeyMapper[_zecreyPubKey] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4103:4124  ZNSZecreyPubKeyMapper */\n      0x04\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4103:4139  ZNSZecreyPubKeyMapper[_zecreyPubKey] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4103:4146  ZNSZecreyPubKeyMapper[_zecreyPubKey] == 0x0 */\n      iszero\n      swap1\n        /* \"contracts/ZNSFIFSRegistrar.sol\":4006:4153  function _validZecreyPubKey(bytes32 _zecreyPubKey) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3738:3855  function _validCharset(string memory _name) internal pure returns (bool) {... */\n    tag_114:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3805:3809  bool */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3828:3848  _name.charsetValid() */\n      tag_116\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3828:3833  _name */\n      dup3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3828:3846  _name.charsetValid */\n      tag_121\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3828:3848  _name.charsetValid() */\n      jump\t// in\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3861:4000  function _validLength(string memory _name) internal pure returns (bool) {... */\n    tag_117:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3927:3931  bool */\n      0x00\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3968:3969  3 */\n      0x03\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3950:3964  _name.strlen() */\n      tag_123\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3950:3955  _name */\n      dup4\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3950:3962  _name.strlen */\n      tag_124\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3950:3964  _name.strlen() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3950:3969  _name.strlen() >= 3 */\n      lt\n      iszero\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3950:3993  _name.strlen() >= 3 && _name.strlen() <= 32 */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3991:3993  32 */\n      0x20\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3973:3987  _name.strlen() */\n      tag_126\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3973:3978  _name */\n      dup4\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3973:3985  _name.strlen */\n      tag_124\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3973:3987  _name.strlen() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3973:3993  _name.strlen() <= 32 */\n      gt\n      iszero\n      swap3\n        /* \"contracts/ZNSFIFSRegistrar.sol\":3861:4000  function _validLength(string memory _name) internal pure returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Names.sol\":1105:1420  function charsetValid(string memory s) internal pure returns (bool) {... */\n    tag_121:\n        /* \"contracts/utils/Names.sol\":1201:1216  bytes(s).length */\n      dup1\n      mload\n        /* \"contracts/utils/Names.sol\":1167:1171  bool */\n      0x00\n      swap1\n      dup2\n        /* \"contracts/utils/Names.sol\":1226:1393  for(uint i = 0; i < bytelength; i++) {... */\n    tag_128:\n        /* \"contracts/utils/Names.sol\":1246:1256  bytelength */\n      dup2\n        /* \"contracts/utils/Names.sol\":1242:1243  i */\n      dup2\n        /* \"contracts/utils/Names.sol\":1242:1256  i < bytelength */\n      lt\n        /* \"contracts/utils/Names.sol\":1226:1393  for(uint i = 0; i < bytelength; i++) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/utils/Names.sol\":1277:1285  bytes1 b */\n      0x00\n        /* \"contracts/utils/Names.sol\":1294:1295  s */\n      dup5\n        /* \"contracts/utils/Names.sol\":1297:1298  i */\n      dup3\n        /* \"contracts/utils/Names.sol\":1288:1299  bytes(s)[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n      add\n      0x20\n      add\n      mload\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      pop\n        /* \"contracts/utils/Names.sol\":1317:1336  isValidCharacter(b) */\n      tag_132\n        /* \"contracts/utils/Names.sol\":1288:1299  bytes(s)[i] */\n      dup2\n        /* \"contracts/utils/Names.sol\":1317:1333  isValidCharacter */\n      tag_133\n        /* \"contracts/utils/Names.sol\":1317:1336  isValidCharacter(b) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/utils/Names.sol\":1313:1383  if(!isValidCharacter(b)) {... */\n      tag_134\n      jumpi\n        /* \"contracts/utils/Names.sol\":1363:1368  false */\n      0x00\n        /* \"contracts/utils/Names.sol\":1356:1368  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/utils/Names.sol\":1313:1383  if(!isValidCharacter(b)) {... */\n    tag_134:\n      pop\n        /* \"contracts/utils/Names.sol\":1258:1261  i++ */\n      0x01\n      add\n        /* \"contracts/utils/Names.sol\":1226:1393  for(uint i = 0; i < bytelength; i++) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"contracts/utils/Names.sol\":1409:1413  true */\n      0x01\n      swap4\n        /* \"contracts/utils/Names.sol\":1105:1420  function charsetValid(string memory s) internal pure returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Names.sol\":297:906  function strlen(string memory s) internal pure returns (uint) {... */\n    tag_124:\n        /* \"contracts/utils/Names.sol\":425:440  bytes(s).length */\n      dup1\n      mload\n        /* \"contracts/utils/Names.sol\":353:357  uint */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/utils/Names.sol\":450:880  for(len = 0; i < bytelength; len++) {... */\n    tag_136:\n        /* \"contracts/utils/Names.sol\":467:477  bytelength */\n      dup1\n        /* \"contracts/utils/Names.sol\":463:464  i */\n      dup3\n        /* \"contracts/utils/Names.sol\":463:477  i < bytelength */\n      lt\n        /* \"contracts/utils/Names.sol\":450:880  for(len = 0; i < bytelength; len++) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/utils/Names.sol\":500:508  bytes1 b */\n      0x00\n        /* \"contracts/utils/Names.sol\":517:518  s */\n      dup6\n        /* \"contracts/utils/Names.sol\":520:521  i */\n      dup4\n        /* \"contracts/utils/Names.sol\":511:522  bytes(s)[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n      add\n      0x20\n      add\n      mload\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      pop\n      shl(0xff, 0x01)\n        /* \"contracts/utils/Names.sol\":539:548  b <= 0x80 */\n      dup2\n      gt\n        /* \"contracts/utils/Names.sol\":536:870  if(b <= 0x80) {... */\n      tag_140\n      jumpi\n        /* \"contracts/utils/Names.sol\":573:574  1 */\n      0x01\n        /* \"contracts/utils/Names.sol\":568:574  i += 1 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/utils/Names.sol\":536:870  if(b <= 0x80) {... */\n      jump(tag_149)\n    tag_140:\n      shl(0xfd, 0x07)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":599:607  b < 0xE0 */\n      dup3\n      and\n      lt\n        /* \"contracts/utils/Names.sol\":595:870  if (b < 0xE0) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/utils/Names.sol\":632:633  2 */\n      0x02\n        /* \"contracts/utils/Names.sol\":627:633  i += 2 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/utils/Names.sol\":595:870  if (b < 0xE0) {... */\n      jump(tag_149)\n    tag_142:\n      shl(0xfc, 0x0f)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":658:666  b < 0xF0 */\n      dup3\n      and\n      lt\n        /* \"contracts/utils/Names.sol\":654:870  if (b < 0xF0) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/utils/Names.sol\":691:692  3 */\n      0x03\n        /* \"contracts/utils/Names.sol\":686:692  i += 3 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/utils/Names.sol\":654:870  if (b < 0xF0) {... */\n      jump(tag_149)\n    tag_144:\n      shl(0xfb, 0x1f)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":717:725  b < 0xF8 */\n      dup3\n      and\n      lt\n        /* \"contracts/utils/Names.sol\":713:870  if (b < 0xF8) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/utils/Names.sol\":750:751  4 */\n      0x04\n        /* \"contracts/utils/Names.sol\":745:751  i += 4 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/utils/Names.sol\":713:870  if (b < 0xF8) {... */\n      jump(tag_149)\n    tag_146:\n      shl(0xfa, 0x3f)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":776:784  b < 0xFC */\n      dup3\n      and\n      lt\n        /* \"contracts/utils/Names.sol\":772:870  if (b < 0xFC) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/utils/Names.sol\":809:810  5 */\n      0x05\n        /* \"contracts/utils/Names.sol\":804:810  i += 5 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/utils/Names.sol\":772:870  if (b < 0xFC) {... */\n      jump(tag_149)\n    tag_148:\n        /* \"contracts/utils/Names.sol\":854:855  6 */\n      0x06\n        /* \"contracts/utils/Names.sol\":849:855  i += 6 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/utils/Names.sol\":772:870  if (b < 0xFC) {... */\n    tag_149:\n      pop\n        /* \"contracts/utils/Names.sol\":479:484  len++ */\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n        /* \"contracts/utils/Names.sol\":450:880  for(len = 0; i < bytelength; len++) {... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"contracts/utils/Names.sol\":896:899  len */\n      swap1\n      swap4\n        /* \"contracts/utils/Names.sol\":297:906  function strlen(string memory s) internal pure returns (uint) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Names.sol\":1484:1683  function isValidCharacter(bytes1 bs) internal pure returns (bool) {... */\n    tag_133:\n        /* \"contracts/utils/Names.sol\":1544:1548  bool */\n      0x00\n      shl(0xf8, 0x39)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":1568:1578  bs <= 0x39 */\n      dup4\n      and\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"contracts/utils/Names.sol\":1568:1592  bs <= 0x39 && bs >= 0x30 */\n      tag_151\n      jumpi\n      pop\n      shl(0xfc, 0x03)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":1582:1592  bs >= 0x30 */\n      dup4\n      and\n      lt\n      iszero\n        /* \"contracts/utils/Names.sol\":1568:1592  bs <= 0x39 && bs >= 0x30 */\n    tag_151:\n        /* \"contracts/utils/Names.sol\":1567:1655  (bs <= 0x39 && bs >= 0x30)       // number... */\n      dup1\n      tag_116\n      jumpi\n      pop\n      shl(0xf9, 0x3d)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":1630:1640  bs <= 0x7A */\n      dup4\n      and\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"contracts/utils/Names.sol\":1630:1654  bs <= 0x7A && bs >= 0x61 */\n      tag_116\n      jumpi\n      pop\n      pop\n      shl(0xf8, 0x61)\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"contracts/utils/Names.sol\":1644:1654  bs >= 0x61 */\n      swap2\n      swap1\n      swap2\n      and\n      lt\n      iszero\n      swap1\n        /* \"contracts/utils/Names.sol\":1484:1683  function isValidCharacter(bytes1 bs) internal pure returns (bool) {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209b348fcbc436e1d6282bb4914fed0732da43ceba31d431f90354342ded8aa2c064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610bc1806100326000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a7fc7a071161008c578063ddf7fcb011610066578063ddf7fcb0146102ba578063deb931a2146102d4578063f2fde38b146102f1578063f6a74ed714610317576100cf565b8063a7fc7a07146101ef578063d7757da114610215578063da8c229e14610294576100cf565b80632f54bf6e146100d4578063439fab911461010e57806358ffb7fd146101805780635b817475146101a45780637a0d942b146101c15780638da5cb5b146101e7575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b031661033d565b604080519115158252519081900360200190f35b61017e6004803603602081101561012457600080fd5b81019060208101813564010000000081111561013f57600080fd5b82018360208201111561015157600080fd5b8035906020019184600183028401116401000000008311171561017357600080fd5b509092509050610354565b005b6101886103ae565b604080516001600160a01b039092168252519081900360200190f35b61017e600480360360208110156101ba57600080fd5b50356103bd565b61017e600480360360208110156101d757600080fd5b50356001600160a01b0316610441565b6101886104ab565b61017e6004803603602081101561020557600080fd5b50356001600160a01b03166104ba565b61017e6004803603606081101561022b57600080fd5b81019060208101813564010000000081111561024657600080fd5b82018360208201111561025857600080fd5b8035906020019184600183028401116401000000008311171561027a57600080fd5b91935091506001600160a01b038135169060200135610518565b6100fa600480360360208110156102aa57600080fd5b50356001600160a01b031661081c565b6102c2610831565b60408051918252519081900360200190f35b610188600480360360208110156102ea57600080fd5b5035610837565b61017e6004803603602081101561030757600080fd5b50356001600160a01b03166108b5565b61017e6004803603602081101561032d57600080fd5b50356001600160a01b0316610922565b6000546001600160a01b038281169116145b919050565b6000808383604081101561036757600080fd5b50600180546001600160a01b0319166001600160a01b0383351617815560209182013560025533600090815260039092526040909120805460ff1916909117905550505050565b6001546001600160a01b031681565b6103c63361033d565b6103cf57600080fd5b600154600254604080516386d5f0d960e01b8152600481019290925260248201849052516001600160a01b03909216916386d5f0d99160448082019260009290919082900301818387803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b5050505050565b61044a3361033d565b61045357600080fd5b60015460025460408051630c4b7b8560e11b815260048101929092526001600160a01b0384811660248401529051921691631896f70a9160448082019260009290919082900301818387803b15801561042657600080fd5b6000546001600160a01b031681565b6104c33361033d565b6104cc57600080fd5b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517f0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d74749190a250565b3360009081526003602052604090205460ff1661053457600080fd5b61057384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061097d92505050565b6105b3576040805162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e616d6560a01b604482015290519081900360640190fd5b6105bc8161099e565b610600576040805162461bcd60e51b815260206004820152601060248201526f130c881bdddb995c88195e1a5cdd195960821b604482015290519081900360640190fd5b60008484604051808383808284376040805191909301819003812060015460025463212a6bcd60e01b845260048401526024830182905293519097506001600160a01b03909316955063212a6bcd945060448082019450602093925090829003018186803b15801561067157600080fd5b505afa158015610685573d6000803e3d6000fd5b505050506040513d602081101561069b57600080fd5b5051156106e1576040805162461bcd60e51b815260206004820152600f60248201526e1cdd589b9bd91948195e1a5cdd1959608a1b604482015290519081900360640190fd5b60015460025460408051631c98504f60e31b81526004810192909252602482018490526001600160a01b038681166044840152606483018690529051600093919091169163e4c2827891608480830192602092919082900301818787803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b505050506040513d602081101561077557600080fd5b505160008481526004602090815260409182902083905581519081018390526001600160a01b0387169181019190915260608101859052608080825281018790529091507f36e1387993e62301c322576ae290f9934f5eb108709972fb6a5892e18544a08b90879087908490889088908060a08101878780828437600083820152604051601f909101601f19169092018290039850909650505050505050a1505050505050565b60036020526000908152604090205460ff1681565b60025481565b600154604080516302571be360e01b81526004810184905290516000926001600160a01b0316916302571be3916024808301926020929190829003018186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d60208110156108ad57600080fd5b505192915050565b6108be3361033d565b6108c757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b61092b3361033d565b61093457600080fd5b6001600160a01b038116600081815260036020526040808220805460ff19169055517f33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e811139190a250565b6000610988826109b1565b80156109985750610998826109bc565b92915050565b6000908152600460205260409020541590565b6000610998826109e5565b600060036109c983610a3f565b10158015610998575060206109dd83610a3f565b111592915050565b8051600090815b81811015610a35576000848281518110610a0257fe5b01602001516001600160f81b0319169050610a1c81610b26565b610a2c576000935050505061034f565b506001016109ec565b5060019392505050565b8051600090819081905b80821015610b1d576000858381518110610a5f57fe5b01602001516001600160f81b0319169050600160ff1b8111610a8657600183019250610b11565b600760fd1b6001600160f81b031982161015610aa757600283019250610b11565b600f60fc1b6001600160f81b031982161015610ac857600383019250610b11565b601f60fb1b6001600160f81b031982161015610ae957600483019250610b11565b603f60fa1b6001600160f81b031982161015610b0a57600583019250610b11565b6006830192505b50600190920191610a49565b50909392505050565b6000603960f81b6001600160f81b0319831611801590610b545750600360fc1b6001600160f81b0319831610155b806109985750603d60f91b6001600160f81b0319831611801590610998575050606160f81b6001600160f81b03199190911610159056fea26469706673582212209b348fcbc436e1d6282bb4914fed0732da43ceba31d431f90354342ded8aa2c064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xBC1 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7FC7A07 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDDF7FCB0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDDF7FCB0 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xDEB931A2 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xF6A74ED7 EQ PUSH2 0x317 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xA7FC7A07 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD7757DA1 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xDA8C229E EQ PUSH2 0x294 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x439FAB91 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x58FFB7FD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x5B817475 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7A0D942B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x441 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x518 JUMP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x837 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND OR DUP2 SSTORE PUSH1 0x20 SWAP2 DUP3 ADD CALLDATALOAD PUSH1 0x2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3C6 CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86D5F0D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x86D5F0D9 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x44A CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC4B7B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 MLOAD SWAP3 AND SWAP2 PUSH4 0x1896F70A SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4C3 CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xA8BB31534C0ED46F380CB867BD5C803A189CED9A764E30B3A4991A9901D7474 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x573 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x97D SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x696E76616C6964206E616D65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5BC DUP2 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x600 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x130C881BDDDB995C88195E1A5CDD1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH4 0x212A6BCD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 POP PUSH4 0x212A6BCD SWAP5 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP5 POP PUSH1 0x20 SWAP4 SWAP3 POP SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x685 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1CDD589B9BD91948195E1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C98504F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 PUSH4 0xE4C28278 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x36E1387993E62301C322576AE290F9934F5EB108709972FB6A5892E18544A08B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP1 PUSH1 0xA0 DUP2 ADD DUP8 DUP8 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2571BE3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BE CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x92B CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x33D83959BE2573F5453B12EB9D43B3499BC57D96BD2F067BA44803C859E81113 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 DUP3 PUSH2 0x9B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x998 JUMPI POP PUSH2 0x998 DUP3 PUSH2 0x9BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x998 DUP3 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x9C9 DUP4 PUSH2 0xA3F JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI POP PUSH1 0x20 PUSH2 0x9DD DUP4 PUSH2 0xA3F JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA02 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 POP PUSH2 0xA1C DUP2 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x34F JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x9EC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA5F JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 POP PUSH1 0x1 PUSH1 0xFF SHL DUP2 GT PUSH2 0xA86 JUMPI PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x7 PUSH1 0xFD SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x2 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0xF PUSH1 0xFC SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1F PUSH1 0xFB SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x4 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x3F PUSH1 0xFA SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x5 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xA49 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x39 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 AND GT DUP1 ISZERO SWAP1 PUSH2 0xB54 JUMPI POP PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 AND LT ISZERO JUMPDEST DUP1 PUSH2 0x998 JUMPI POP PUSH1 0x3D PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 AND GT DUP1 ISZERO SWAP1 PUSH2 0x998 JUMPI POP POP PUSH1 0x61 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND LT ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 CALLVALUE DUP16 0xCB 0xC4 CALLDATASIZE 0xE1 0xD6 0x28 0x2B 0xB4 SWAP2 0x4F 0xED SMOD ORIGIN 0xDA NUMBER 0xCE 0xBA BALANCE 0xD4 BALANCE 0xF9 SUB SLOAD CALLVALUE 0x2D 0xED DUP11 LOG2 0xC0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "287:3868:3:-:0;;;;;;;;;;;;-1:-1:-1;318:5:1;:18;;-1:-1:-1;;;;;;318:18:1;326:10;318:18;;;287:3868:3;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a7fc7a071161008c578063ddf7fcb011610066578063ddf7fcb0146102ba578063deb931a2146102d4578063f2fde38b146102f1578063f6a74ed714610317576100cf565b8063a7fc7a07146101ef578063d7757da114610215578063da8c229e14610294576100cf565b80632f54bf6e146100d4578063439fab911461010e57806358ffb7fd146101805780635b817475146101a45780637a0d942b146101c15780638da5cb5b146101e7575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b031661033d565b604080519115158252519081900360200190f35b61017e6004803603602081101561012457600080fd5b81019060208101813564010000000081111561013f57600080fd5b82018360208201111561015157600080fd5b8035906020019184600183028401116401000000008311171561017357600080fd5b509092509050610354565b005b6101886103ae565b604080516001600160a01b039092168252519081900360200190f35b61017e600480360360208110156101ba57600080fd5b50356103bd565b61017e600480360360208110156101d757600080fd5b50356001600160a01b0316610441565b6101886104ab565b61017e6004803603602081101561020557600080fd5b50356001600160a01b03166104ba565b61017e6004803603606081101561022b57600080fd5b81019060208101813564010000000081111561024657600080fd5b82018360208201111561025857600080fd5b8035906020019184600183028401116401000000008311171561027a57600080fd5b91935091506001600160a01b038135169060200135610518565b6100fa600480360360208110156102aa57600080fd5b50356001600160a01b031661081c565b6102c2610831565b60408051918252519081900360200190f35b610188600480360360208110156102ea57600080fd5b5035610837565b61017e6004803603602081101561030757600080fd5b50356001600160a01b03166108b5565b61017e6004803603602081101561032d57600080fd5b50356001600160a01b0316610922565b6000546001600160a01b038281169116145b919050565b6000808383604081101561036757600080fd5b50600180546001600160a01b0319166001600160a01b0383351617815560209182013560025533600090815260039092526040909120805460ff1916909117905550505050565b6001546001600160a01b031681565b6103c63361033d565b6103cf57600080fd5b600154600254604080516386d5f0d960e01b8152600481019290925260248201849052516001600160a01b03909216916386d5f0d99160448082019260009290919082900301818387803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b5050505050565b61044a3361033d565b61045357600080fd5b60015460025460408051630c4b7b8560e11b815260048101929092526001600160a01b0384811660248401529051921691631896f70a9160448082019260009290919082900301818387803b15801561042657600080fd5b6000546001600160a01b031681565b6104c33361033d565b6104cc57600080fd5b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517f0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d74749190a250565b3360009081526003602052604090205460ff1661053457600080fd5b61057384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061097d92505050565b6105b3576040805162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206e616d6560a01b604482015290519081900360640190fd5b6105bc8161099e565b610600576040805162461bcd60e51b815260206004820152601060248201526f130c881bdddb995c88195e1a5cdd195960821b604482015290519081900360640190fd5b60008484604051808383808284376040805191909301819003812060015460025463212a6bcd60e01b845260048401526024830182905293519097506001600160a01b03909316955063212a6bcd945060448082019450602093925090829003018186803b15801561067157600080fd5b505afa158015610685573d6000803e3d6000fd5b505050506040513d602081101561069b57600080fd5b5051156106e1576040805162461bcd60e51b815260206004820152600f60248201526e1cdd589b9bd91948195e1a5cdd1959608a1b604482015290519081900360640190fd5b60015460025460408051631c98504f60e31b81526004810192909252602482018490526001600160a01b038681166044840152606483018690529051600093919091169163e4c2827891608480830192602092919082900301818787803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b505050506040513d602081101561077557600080fd5b505160008481526004602090815260409182902083905581519081018390526001600160a01b0387169181019190915260608101859052608080825281018790529091507f36e1387993e62301c322576ae290f9934f5eb108709972fb6a5892e18544a08b90879087908490889088908060a08101878780828437600083820152604051601f909101601f19169092018290039850909650505050505050a1505050505050565b60036020526000908152604090205460ff1681565b60025481565b600154604080516302571be360e01b81526004810184905290516000926001600160a01b0316916302571be3916024808301926020929190829003018186803b15801561088357600080fd5b505afa158015610897573d6000803e3d6000fd5b505050506040513d60208110156108ad57600080fd5b505192915050565b6108be3361033d565b6108c757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b61092b3361033d565b61093457600080fd5b6001600160a01b038116600081815260036020526040808220805460ff19169055517f33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e811139190a250565b6000610988826109b1565b80156109985750610998826109bc565b92915050565b6000908152600460205260409020541590565b6000610998826109e5565b600060036109c983610a3f565b10158015610998575060206109dd83610a3f565b111592915050565b8051600090815b81811015610a35576000848281518110610a0257fe5b01602001516001600160f81b0319169050610a1c81610b26565b610a2c576000935050505061034f565b506001016109ec565b5060019392505050565b8051600090819081905b80821015610b1d576000858381518110610a5f57fe5b01602001516001600160f81b0319169050600160ff1b8111610a8657600183019250610b11565b600760fd1b6001600160f81b031982161015610aa757600283019250610b11565b600f60fc1b6001600160f81b031982161015610ac857600383019250610b11565b601f60fb1b6001600160f81b031982161015610ae957600483019250610b11565b603f60fa1b6001600160f81b031982161015610b0a57600583019250610b11565b6006830192505b50600190920191610a49565b50909392505050565b6000603960f81b6001600160f81b0319831611801590610b545750600360fc1b6001600160f81b0319831610155b806109985750603d60f91b6001600160f81b0319831611801590610998575050606160f81b6001600160f81b03199190911610159056fea26469706673582212209b348fcbc436e1d6282bb4914fed0732da43ceba31d431f90354342ded8aa2c064736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7FC7A07 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDDF7FCB0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDDF7FCB0 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xDEB931A2 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xF6A74ED7 EQ PUSH2 0x317 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xA7FC7A07 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD7757DA1 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xDA8C229E EQ PUSH2 0x294 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x439FAB91 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x58FFB7FD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x5B817475 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7A0D942B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x441 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x518 JUMP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x837 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x922 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND OR DUP2 SSTORE PUSH1 0x20 SWAP2 DUP3 ADD CALLDATALOAD PUSH1 0x2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3C6 CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x86D5F0D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x86D5F0D9 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x44A CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC4B7B85 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 MLOAD SWAP3 AND SWAP2 PUSH4 0x1896F70A SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4C3 CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xA8BB31534C0ED46F380CB867BD5C803A189CED9A764E30B3A4991A9901D7474 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x573 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x97D SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x696E76616C6964206E616D65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5BC DUP2 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x600 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x130C881BDDDB995C88195E1A5CDD1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH4 0x212A6BCD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 POP PUSH4 0x212A6BCD SWAP5 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP5 POP PUSH1 0x20 SWAP4 SWAP3 POP SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x685 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1CDD589B9BD91948195E1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C98504F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 PUSH4 0xE4C28278 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x36E1387993E62301C322576AE290F9934F5EB108709972FB6A5892E18544A08B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP1 PUSH1 0xA0 DUP2 ADD DUP8 DUP8 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2571BE3 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BE CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x92B CALLER PUSH2 0x33D JUMP JUMPDEST PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x33D83959BE2573F5453B12EB9D43B3499BC57D96BD2F067BA44803C859E81113 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 DUP3 PUSH2 0x9B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x998 JUMPI POP PUSH2 0x998 DUP3 PUSH2 0x9BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x998 DUP3 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x9C9 DUP4 PUSH2 0xA3F JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI POP PUSH1 0x20 PUSH2 0x9DD DUP4 PUSH2 0xA3F JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA02 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 POP PUSH2 0xA1C DUP2 PUSH2 0xB26 JUMP JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x34F JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x9EC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA5F JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 POP PUSH1 0x1 PUSH1 0xFF SHL DUP2 GT PUSH2 0xA86 JUMPI PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x7 PUSH1 0xFD SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x2 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0xF PUSH1 0xFC SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1F PUSH1 0xFB SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x4 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x3F PUSH1 0xFA SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND LT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x5 DUP4 ADD SWAP3 POP PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xA49 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x39 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 AND GT DUP1 ISZERO SWAP1 PUSH2 0xB54 JUMPI POP PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 AND LT ISZERO JUMPDEST DUP1 PUSH2 0x998 JUMPI POP PUSH1 0x3D PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 AND GT DUP1 ISZERO SWAP1 PUSH2 0x998 JUMPI POP POP PUSH1 0x61 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND LT ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 CALLVALUE DUP16 0xCB 0xC4 CALLDATASIZE 0xE1 0xD6 0x28 0x2B 0xB4 SWAP2 0x4F 0xED SMOD ORIGIN 0xDA NUMBER 0xCE 0xBA BALANCE 0xD4 BALANCE 0xF9 SUB SLOAD CALLVALUE 0x2D 0xED DUP11 LOG2 0xC0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "287:3868:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:95:1;;;;;;;;;;;;;;;;-1:-1:-1;502:95:1;-1:-1:-1;;;;;502:95:1;;:::i;:::-;;;;;;;;;;;;;;;;;;1192:274:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1192:274:3;;-1:-1:-1;1192:274:3;-1:-1:-1;1192:274:3;:::i;:::-;;396:14;;;:::i;:::-;;;;-1:-1:-1;;;;;396:14:3;;;;;;;;;;;;;;2287:137;;;;;;;;;;;;;;;;-1:-1:-1;2287:137:3;;:::i;2044:125::-;;;;;;;;;;;;;;;;-1:-1:-1;2044:125:3;-1:-1:-1;;;;;2044:125:3;;:::i;96:20:1:-;;;:::i;1536:163:3:-;;;;;;;;;;;;;;;;-1:-1:-1;1536:163:3;-1:-1:-1;;;;;1536:163:3;;:::i;2794:799::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2794:799:3;-1:-1:-1;;;;;;2794:799:3;;;;;;;;:::i;617:43::-;;;;;;;;;;;;;;;;-1:-1:-1;617:43:3;-1:-1:-1;;;;;617:43:3;;:::i;496:23::-;;;:::i;:::-;;;;;;;;;;;;;;;;2430:102;;;;;;;;;;;;;;;;-1:-1:-1;2430:102:3;;:::i;349:147:1:-;;;;;;;;;;;;;;;;-1:-1:-1;349:147:1;-1:-1:-1;;;;;349:147:1;;:::i;1757:169:3:-;;;;;;;;;;;;;;;;-1:-1:-1;1757:169:3;-1:-1:-1;;;;;1757:169:3;;:::i;502:95:1:-;554:4;577:5;-1:-1:-1;;;;;577:13:1;;;:5;;:13;502:95;;;;:::o;1192:274:3:-;1273:16;1291:13;1319:24;;1308:56;;;;;;;;;;-1:-1:-1;1374:3:3;:19;;-1:-1:-1;;;;;;1374:19:3;-1:-1:-1;;;;;1308:56:3;;;1374:19;;;1308:56;;;;;1403:8;:16;1441:10;1374:3;1429:23;;;:11;:23;;;1308:56;1429:23;;;:30;;-1:-1:-1;;1429:30:3;;;;;;-1:-1:-1;;;;1192:274:3:o;396:14::-;;;-1:-1:-1;;;;;396:14:3;;:::o;2287:137::-;250:19:1;258:10;250:7;:19::i;:::-;242:28;;;;;;2373:3:3::1;::::0;2393:8:::1;::::0;2373:44:::1;::::0;;-1:-1:-1;;;2373:44:3;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;;;;;2373:3:3;;::::1;::::0;:19:::1;::::0;:44;;;;;:3:::1;::::0;:44;;;;;;;;:3;;:44;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2287:137:::0;:::o;2044:125::-;250:19:1;258:10;250:7;:19::i;:::-;242:28;;;;;;2126:3:3::1;::::0;2142:8:::1;::::0;2126:36:::1;::::0;;-1:-1:-1;;;2126:36:3;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;2126:36:3;;::::1;::::0;;;;;;:3;::::1;::::0;:15:::1;::::0;:36;;;;;:3:::1;::::0;:36;;;;;;;;:3;;:36;::::1;;::::0;::::1;;;;::::0;::::1;96:20:1::0;;;-1:-1:-1;;;;;96:20:1;;:::o;1536:163:3:-;250:19:1;258:10;250:7;:19::i;:::-;242:28;;;;;;-1:-1:-1;;;;;1618:24:3;::::1;;::::0;;;:11:::1;:24;::::0;;;;;:31;;-1:-1:-1;;1618:31:3::1;1645:4;1618:31;::::0;;1664:28;::::1;::::0;1618:24;1664:28:::1;1536:163:::0;:::o;2794:799::-;890:10;878:23;;;;:11;:23;;;;;;;;870:32;;;;;;2967:13:::1;2974:5;;2967:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2967:6:3::1;::::0;-1:-1:-1;;;2967:13:3:i:1;:::-;2959:38;;;::::0;;-1:-1:-1;;;2959:38:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2959:38:3;;;;;;;;;;;;;::::1;;3071:33;3090:13;3071:18;:33::i;:::-;3063:62;;;::::0;;-1:-1:-1;;;3063:62:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3063:62:3;;;;;;;;;;;;;::::1;;3165:13;3197:5;;3181:23;;;;;;;;;;::::0;;;;;::::1;::::0;;::::1;::::0;;3279:3:::1;::::0;3303:8:::1;::::0;-1:-1:-1;;;3279:40:3;;::::1;::::0;::::1;::::0;;;;;;;;;3181:23;;-1:-1:-1;;;;;;3279:3:3;;::::1;::::0;-1:-1:-1;3279:23:3::1;::::0;-1:-1:-1;3279:40:3;;;;;-1:-1:-1;3279:40:3::1;::::0;;-1:-1:-1;3279:40:3;;;;;;:3;:40;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3279:40:3;3278:41:::1;3270:69;;;::::0;;-1:-1:-1;;;3270:69:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3270:69:3;;;;;;;;;;;;;::::1;;3368:3;::::0;3388:8:::1;::::0;3368:59:::1;::::0;;-1:-1:-1;;;3368:59:3;;::::1;::::0;::::1;::::0;;;;;;;;;;-1:-1:-1;;;;;3368:59:3;;::::1;::::0;;;;;;;;;;;;3350:15:::1;::::0;3368:3;;;::::1;::::0;:19:::1;::::0;:59;;;;;::::1;::::0;;;;;;;;3350:15;3368:3;:59;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3368:59:3;3472:36:::1;::::0;;;:21:::1;3368:59;3472:36:::0;;;;;;;;:46;;;3534:52;;;;::::1;::::0;;;-1:-1:-1;;;;;3534:52:3;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;3368:59;;-1:-1:-1;3534:52:3::1;::::0;3548:5;;;;3368:59;;3564:6;;3494:13;;3534:52;;;;3548:5;;;;3534:52;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;3534:52:3::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;3534:52:3;;-1:-1:-1;;;;;;;3534:52:3::1;912:1;;2794:799:::0;;;;:::o;617:43::-;;;;;;;;;;;;;;;:::o;496:23::-;;;;:::o;2430:102::-;2510:3;;:15;;;-1:-1:-1;;;2510:15:3;;;;;;;;;;2485:7;;-1:-1:-1;;;;;2510:3:3;;:9;;:15;;;;;;;;;;;;;;:3;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2510:15:3;;2430:102;-1:-1:-1;;2430:102:3:o;349:147:1:-;250:19;258:10;250:7;:19::i;:::-;242:28;;;;;;447:5:::1;::::0;;426:37:::1;::::0;-1:-1:-1;;;;;426:37:1;;::::1;::::0;447:5;::::1;::::0;426:37:::1;::::0;::::1;473:5;:16:::0;;-1:-1:-1;;;;;;473:16:1::1;-1:-1:-1::0;;;;;473:16:1;;;::::1;::::0;;;::::1;::::0;;349:147::o;1757:169:3:-;250:19:1;258:10;250:7;:19::i;:::-;242:28;;;;;;-1:-1:-1;;;;;1842:24:3;::::1;1869:5;1842:24:::0;;;:11:::1;:24;::::0;;;;;:32;;-1:-1:-1;;1842:32:3::1;::::0;;1889:30;::::1;::::0;1869:5;1889:30:::1;1757:169:::0;:::o;3599:133::-;3659:4;3682:20;3696:5;3682:13;:20::i;:::-;:43;;;;;3706:19;3719:5;3706:12;:19::i;:::-;3675:50;3599:133;-1:-1:-1;;3599:133:3:o;4006:147::-;4080:4;4103:36;;;:21;:36;;;;;;:43;;4006:147::o;3738:117::-;3805:4;3828:20;:5;:18;:20::i;3861:139::-;3927:4;3968:1;3950:14;:5;:12;:14::i;:::-;:19;;:43;;;;;3991:2;3973:14;:5;:12;:14::i;:::-;:20;;;3861:139;-1:-1:-1;;3861:139:3:o;1105:315:4:-;1201:15;;1167:4;;;1226:167;1246:10;1242:1;:14;1226:167;;;1277:8;1294:1;1297;1288:11;;;;;;;;;;;;-1:-1:-1;;;;;;1288:11:4;;-1:-1:-1;1317:19:4;1288:11;1317:16;:19::i;:::-;1313:70;;1363:5;1356:12;;;;;;;1313:70;-1:-1:-1;1258:3:4;;1226:167;;;-1:-1:-1;1409:4:4;;1105:315;-1:-1:-1;;;1105:315:4:o;297:609::-;425:15;;353:4;;;;;;450:430;467:10;463:1;:14;450:430;;;500:8;517:1;520;511:11;;;;;;;;;;;;-1:-1:-1;;;;;;511:11:4;;-1:-1:-1;;;;539:9:4;;536:334;;573:1;568:6;;;;536:334;;;-1:-1:-1;;;;;;;;;599:8:4;;;595:275;;;632:1;627:6;;;;595:275;;;-1:-1:-1;;;;;;;;;658:8:4;;;654:216;;;691:1;686:6;;;;654:216;;;-1:-1:-1;;;;;;;;;717:8:4;;;713:157;;;750:1;745:6;;;;713:157;;;-1:-1:-1;;;;;;;;;776:8:4;;;772:98;;;809:1;804:6;;;;772:98;;;854:1;849:6;;;;772:98;-1:-1:-1;479:5:4;;;;;450:430;;;-1:-1:-1;896:3:4;;297:609;-1:-1:-1;;;297:609:4:o;1484:199::-;1544:4;-1:-1:-1;;;;;;;;;1568:10:4;;;;;;:24;;-1:-1:-1;;;;;;;;;;1582:10:4;;;;1568:24;1567:88;;;-1:-1:-1;;;;;;;;;;1630:10:4;;;;;;:24;;-1:-1:-1;;;;;;;;;;;1644:10:4;;;;;;;1484:199::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "601800",
								"executionCost": "21473",
								"totalCost": "623273"
							},
							"external": {
								"addController(address)": "23165",
								"baseNode()": "1020",
								"controllers(address)": "1203",
								"getOwner(bytes32)": "infinite",
								"initialize(bytes)": "62201",
								"isOwner(address)": "1104",
								"owner()": "1148",
								"registerZNS(string,address,bytes32)": "infinite",
								"removeController(address)": "23224",
								"setThisResolver(address)": "infinite",
								"setZecreyPubKey(bytes32)": "infinite",
								"transferOwnership(address)": "24378",
								"zns()": "1082"
							},
							"internal": {
								"_valid(string memory)": "infinite",
								"_validCharset(string memory)": "infinite",
								"_validLength(string memory)": "infinite",
								"_validZecreyPubKey(bytes32)": "890"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 318,
									"end": 323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 336,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 326,
									"end": 336,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 336,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 4155,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b348fcbc436e1d6282bb4914fed0732da43ceba31d431f90354342ded8aa2c064736f6c63430007060033",
									".code": [
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "A7FC7A07"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "DDF7FCB0"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "DDF7FCB0"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "DEB931A2"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "F6A74ED7"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "A7FC7A07"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "D7757DA1"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "DA8C229E"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "2F54BF6E"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "439FAB91"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "58FFB7FD"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "5B817475"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "7A0D942B"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 4155,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 617,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 617,
											"end": 660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 582,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 577,
											"end": 582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 582,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 577,
											"end": 590,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 597,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1319,
											"end": 1343,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1319,
											"end": 1343,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1393,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 1411,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 1419,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1451,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1440,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1452,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1466,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 396,
											"end": 410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 396,
											"end": 410,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 250,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 250,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2401,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2393,
											"end": 2401,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86D5F0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "PUSH",
											"source": 3,
											"value": "86D5F0D9"
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2424,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2044,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 250,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 250,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2142,
											"end": 2150,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4B7B85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "1896F70A"
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2162,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 96,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 116,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 96,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 250,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 250,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1649,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1649,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1618,
											"end": 1649,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1649,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "A8BB31534C0ED46F380CB867BD5C803A189CED9A764E30B3A4991A9901D7474"
										},
										{
											"begin": 1664,
											"end": 1692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1692,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1699,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 890,
											"end": 900,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 878,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 870,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 870,
											"end": 902,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 870,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 902,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 870,
											"end": 902,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 870,
											"end": 902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2967,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964206E616D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3090,
											"end": 3103,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3071,
											"end": 3104,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3071,
											"end": 3104,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3071,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "130C881BDDDB995C88195E1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3063,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3202,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3202,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3303,
											"end": 3311,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "212A6BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "212A6BCD"
										},
										{
											"begin": 3279,
											"end": 3302,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDD589B9BD91948195E1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3270,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3396,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3388,
											"end": 3396,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C98504F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3365,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3387,
											"name": "PUSH",
											"source": 3,
											"value": "E4C28278"
										},
										{
											"begin": 3368,
											"end": 3387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3365,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3508,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3518,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "36E1387993E62301C322576AE290F9934F5EB108709972FB6A5892E18544A08B"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3507,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3586,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 912,
											"end": 913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 3593,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 617,
											"end": 660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 617,
											"end": 660,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 496,
											"end": 519,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 496,
											"end": 519,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2571BE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "2571BE3"
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 250,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 250,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 447,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 426,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 463,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 473,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 489,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 250,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 258,
											"end": 268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 250,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 250,
											"end": 269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 242,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 242,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1866,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1874,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1919,
											"name": "PUSH",
											"source": 3,
											"value": "33D83959BE2573F5453B12EB9D43B3499BC57D96BD2F067BA44803C859E81113"
										},
										{
											"begin": 1889,
											"end": 1919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1919,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1926,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3732,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3599,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3725,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3682,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3719,
											"end": 3724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3706,
											"end": 3725,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3706,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3725,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3732,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4006,
											"end": 4153,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4006,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4124,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4153,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3738,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3738,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3828,
											"end": 3833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3828,
											"end": 3848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 4000,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3861,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3969,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3969,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3969,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3973,
											"end": 3987,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3973,
											"end": 3987,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3973,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3993,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3993,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3993,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4000,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1420,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1105,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1256,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1277,
											"end": 1285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1317,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1317,
											"end": 1336,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1317,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1317,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1313,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1313,
											"end": 1383,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1313,
											"end": 1383,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1313,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1226,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 1413,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1409,
											"end": 1413,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1105,
											"end": 1420,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 906,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 297,
											"end": 906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 353,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 353,
											"end": 357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 353,
											"end": 357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 450,
											"end": 880,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 450,
											"end": 880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 467,
											"end": 477,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 463,
											"end": 464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 463,
											"end": 477,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 450,
											"end": 880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 450,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 450,
											"end": 880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 500,
											"end": 508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 520,
											"end": 521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 511,
											"end": 522,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 511,
											"end": 522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 522,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 511,
											"end": 522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 539,
											"end": 548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 539,
											"end": 548,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 536,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 536,
											"end": 870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 568,
											"end": 574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 568,
											"end": 574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 568,
											"end": 574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 536,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 536,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 599,
											"end": 607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 599,
											"end": 607,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 599,
											"end": 607,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 595,
											"end": 870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 595,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 595,
											"end": 870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 627,
											"end": 633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 627,
											"end": 633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 627,
											"end": 633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 595,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 595,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 595,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 595,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 658,
											"end": 666,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 658,
											"end": 666,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 658,
											"end": 666,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 654,
											"end": 870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 654,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 654,
											"end": 870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 691,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 686,
											"end": 692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 686,
											"end": 692,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 686,
											"end": 692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 654,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 654,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 654,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 654,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 717,
											"end": 725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 717,
											"end": 725,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 717,
											"end": 725,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 713,
											"end": 870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 713,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 713,
											"end": 870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 750,
											"end": 751,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 745,
											"end": 751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 751,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 745,
											"end": 751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 713,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 713,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 713,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 776,
											"end": 784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 776,
											"end": 784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 776,
											"end": 784,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 772,
											"end": 870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 772,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 772,
											"end": 870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 804,
											"end": 810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 804,
											"end": 810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 804,
											"end": 810,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 804,
											"end": 810,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 772,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 849,
											"end": 855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 849,
											"end": 855,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 849,
											"end": 855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 479,
											"end": 484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 450,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 450,
											"end": 880,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 450,
											"end": 880,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 450,
											"end": 880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 896,
											"end": 899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 899,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 297,
											"end": 906,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 297,
											"end": 906,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1484,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1484,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1568,
											"end": 1592,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1568,
											"end": 1592,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1568,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1567,
											"end": 1655,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1630,
											"end": 1654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1683,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addController(address)": "a7fc7a07",
							"baseNode()": "ddf7fcb0",
							"controllers(address)": "da8c229e",
							"getOwner(bytes32)": "deb931a2",
							"initialize(bytes)": "439fab91",
							"isOwner(address)": "2f54bf6e",
							"owner()": "8da5cb5b",
							"registerZNS(string,address,bytes32)": "d7757da1",
							"removeController(address)": "f6a74ed7",
							"setThisResolver(address)": "7a0d942b",
							"setZecreyPubKey(bytes32)": "5b817475",
							"transferOwnership(address)": "f2fde38b",
							"zns()": "58ffb7fd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"L2Owner\",\"type\":\"bytes32\"}],\"name\":\"ZNSRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initializationParameters\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"registerZNS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setThisResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_zecreyPubKey\",\"type\":\"bytes32\"}],\"name\":\"setZecreyPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zns\",\"outputs\":[{\"internalType\":\"contract ZNS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"registerZNS(string,address,bytes32)\":{\"details\":\"Register a new node under base node if it not exists.\",\"params\":{\"_name\":\"The plaintext of the name to register\",\"_owner\":\"The address to receive this name\",\"_zecreyPubKey\":\"The L2 owner to receive this name\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ZNSFIFSRegistrar is a registrar allocating subdomain names to users in Zecrey-Legend in a FIFS way.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZNSFIFSRegistrar.sol\":\"ZNSFIFSRegistrar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBaseRegistrar.sol\":{\"keccak256\":\"0x0b9cc2c012c58eab5422ed9c1fe9e58d8b15b13d013f836bd5d2af6a9fc11f27\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://56cbc0b53528b24aa8ae3e5916bb6f8b247c8f27b46e085dd561bce7c7022dc3\",\"dweb:/ipfs/QmQ6x181Yetu66Lm7bgU5twczS2HuNdBYrtSQNQLuY2DC5\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x4a7b7d2ab0364f6bce20df0a87ec6ac6138172b04e551fc665d36112eeeb5869\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://70a62c43a9a7880b631fc6d50e4b5d9fa9d4ed0ff66a79725d49cbaae06e34e2\",\"dweb:/ipfs/QmdRePNZLkt2QGgYS9fqAkGUJvvYLBKVdcLbtDCMJDVWJZ\"]},\"contracts/ZNS.sol\":{\"keccak256\":\"0x20229f553c6f4e2ff1c1ab2b10b56d3d65304cdc0b928f864a4db931441759d6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bdee2fb7d4749e35db1be63ced699199a47300db22007038f9d3fe3b030df9bc\",\"dweb:/ipfs/QmTHbNvnAEzgArKc9ohjNZMCHczkY3zRcMAC7VMX5c7PrR\"]},\"contracts/ZNSFIFSRegistrar.sol\":{\"keccak256\":\"0xa70c61c67629aef46a923f6ba3cefc19e102a429166dc891f6b045b08faea7a5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a07537cf6378bdae9d77d2bd58ca85c193cb8d24a0e9b0acfb5fa117f3d30431\",\"dweb:/ipfs/QmaKLfYtEtertMg5kiwBkSDGZfZsmKMqgtERYaHBL6k1eG\"]},\"contracts/utils/Names.sol\":{\"keccak256\":\"0xfaf6024928eee108f72ef07872c7f12405a6ac934f8e3a593a4d01e6499e13dd\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6d1d804365b4a09c36e47a610e94f0ff706605af9e364d316a2e33e7eeb47f1a\",\"dweb:/ipfs/QmPNRP1nXMMhPiHjjLK4oLakkmKQWuxb2AhybS63zggNYY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 53,
								"contract": "contracts/ZNSFIFSRegistrar.sol:ZNSFIFSRegistrar",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 243,
								"contract": "contracts/ZNSFIFSRegistrar.sol:ZNSFIFSRegistrar",
								"label": "zns",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ZNS)227"
							},
							{
								"astId": 245,
								"contract": "contracts/ZNSFIFSRegistrar.sol:ZNSFIFSRegistrar",
								"label": "baseNode",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 249,
								"contract": "contracts/ZNSFIFSRegistrar.sol:ZNSFIFSRegistrar",
								"label": "controllers",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 253,
								"contract": "contracts/ZNSFIFSRegistrar.sol:ZNSFIFSRegistrar",
								"label": "ZNSZecreyPubKeyMapper",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ZNS)227": {
								"encoding": "inplace",
								"label": "contract ZNS",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "ZNSFIFSRegistrar is a registrar allocating subdomain names to users in Zecrey-Legend in a FIFS way.",
						"version": 1
					}
				}
			},
			"contracts/utils/Names.sol": {
				"Names": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Names.sol\":72:1685  library Names {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Names.sol\":72:1685  library Names {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220268aa3c1ba0d9b69aac0a572793bcab1e2b4fad698712c1679536742ce02d44a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220268aa3c1ba0d9b69aac0a572793bcab1e2b4fad698712c1679536742ce02d44a64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DUP11 LOG3 0xC1 0xBA 0xD SWAP12 PUSH10 0xAAC0A572793BCAB1E2B4 STATICCALL 0xD6 SWAP9 PUSH18 0x2C1679536742CE02D44A64736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "72:1613:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220268aa3c1ba0d9b69aac0a572793bcab1e2b4fad698712c1679536742ce02d44a64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DUP11 LOG3 0xC1 0xBA 0xD SWAP12 PUSH10 0xAAC0A572793BCAB1E2B4 STATICCALL 0xD6 SWAP9 PUSH18 0x2C1679536742CE02D44A64736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "72:1613:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"charsetValid(string memory)": "infinite",
								"isValidCharacter(bytes1)": "infinite",
								"strlen(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 72,
									"end": 1685,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220268aa3c1ba0d9b69aac0a572793bcab1e2b4fad698712c1679536742ce02d44a64736f6c63430007060033",
									".code": [
										{
											"begin": 72,
											"end": 1685,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 72,
											"end": 1685,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Names.sol\":\"Names\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Names.sol\":{\"keccak256\":\"0xfaf6024928eee108f72ef07872c7f12405a6ac934f8e3a593a4d01e6499e13dd\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6d1d804365b4a09c36e47a610e94f0ff706605af9e364d316a2e33e7eeb47f1a\",\"dweb:/ipfs/QmPNRP1nXMMhPiHjjLK4oLakkmKQWuxb2AhybS63zggNYY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IBaseRegistrar.sol": {
				"ast": {
					"absolutePath": "contracts/IBaseRegistrar.sol",
					"exportedSymbols": {
						"IBaseRegistrar": [
							49
						]
					},
					"id": 50,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "47:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "IBaseRegistrar",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 5,
									"name": "ControllerAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "controller",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "126:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:28:0"
									},
									"src": "104:50:0"
								},
								{
									"anonymous": false,
									"id": 9,
									"name": "ControllerRemoved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "controller",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "184:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:28:0"
									},
									"src": "160:52:0"
								},
								{
									"anonymous": false,
									"id": 19,
									"name": "ZNSRegistered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "312:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 10,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "325:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 12,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "L2Owner",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:59:0"
									},
									"src": "292:79:0"
								},
								{
									"functionSelector": "a7fc7a07",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addController",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "controller",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1033:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:20:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:0:0"
									},
									"scope": 49,
									"src": "1010:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6a74ed7",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeController",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "controller",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1146:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:20:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:0:0"
									},
									"scope": 49,
									"src": "1120:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a0d942b",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setThisResolver",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "resolver",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1263:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:18:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 49,
									"src": "1238:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b817475",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setZecreyPubKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1378:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 35,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:22:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1408:0:0"
									},
									"scope": 49,
									"src": "1353:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d7757da1",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerZNS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1480:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 40,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1503:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1519:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:61:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:0"
									},
									"scope": 49,
									"src": "1459:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "72:1480:0"
						}
					],
					"src": "47:1506:0"
				},
				"id": 0
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 51,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "47:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 53,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "96:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 52,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "96:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "150:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "181:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:57:1"
									},
									"src": "123:84:1"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "232:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 63,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "258:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "258:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 62,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "250:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "250:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "242:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "242:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "242:28:1"
											},
											{
												"id": 68,
												"nodeType": "PlaceholderStatement",
												"src": "280:1:1"
											}
										]
									},
									"id": 70,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:1"
									},
									"src": "213:75:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "308:35:1",
										"statements": [
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "318:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 74,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "326:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "326:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "318:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "318:18:1"
											}
										]
									},
									"id": 79,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:0:1"
									},
									"scope": 109,
									"src": "294:49:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "411:85:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 87,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "447:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 88,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "454:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "426:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "EmitStatement",
												"src": "421:42:1"
											},
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "473:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 92,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "481:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "473:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "473:16:1"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 84,
											"modifierName": {
												"id": 83,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "401:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "401:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "376:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:18:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:1"
									},
									"scope": 109,
									"src": "349:147:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "560:37:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 103,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "577:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 104,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "586:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "577:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 102,
												"id": 106,
												"nodeType": "Return",
												"src": "570:20:1"
											}
										]
									},
									"functionSelector": "2f54bf6e",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "519:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:14:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "554:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "554:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:6:1"
									},
									"scope": 109,
									"src": "502:95:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "72:527:1"
						}
					],
					"src": "47:553:1"
				},
				"id": 1
			},
			"contracts/ZNS.sol": {
				"ast": {
					"absolutePath": "contracts/ZNS.sol",
					"exportedSymbols": {
						"ZNS": [
							227
						]
					},
					"id": 228,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "47:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 227,
							"linearizedBaseContracts": [
								227
							],
							"name": "ZNS",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 117,
									"name": "NewOwner",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "259:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:37:2"
									},
									"src": "222:52:2"
								},
								{
									"anonymous": false,
									"id": 123,
									"name": "NewZecreyPubKey",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "385:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:44:2"
									},
									"src": "363:66:2"
								},
								{
									"anonymous": false,
									"id": 129,
									"name": "NewResolver",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "505:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": false,
												"mutability": "mutable",
												"name": "resolver",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "527:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:40:2"
									},
									"src": "487:58:2"
								},
								{
									"functionSelector": "dc480396",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRecord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "579:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "602:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "626:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_resolver",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "657:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:111:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:2"
									},
									"scope": 227,
									"src": "551:139:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "91d682fc",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeRecord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "731:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_label",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "754:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "778:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "802:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_resolver",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "833:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:135:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "875:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:9:2"
									},
									"scope": 227,
									"src": "696:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e4c28278",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSubnodeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "924:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_label",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "947:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "971:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "995:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:108:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1041:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:9:2"
									},
									"scope": 227,
									"src": "890:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1896f70a",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResolver",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1077:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_resolver",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1092:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:34:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1119:0:2"
									},
									"scope": 227,
									"src": "1056:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0fc9c3",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1144:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1159:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:31:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:2"
									},
									"scope": 227,
									"src": "1126:58:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "86d5f0d9",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setZecreyPubKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_node",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1215:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 183,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1230:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:38:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:0:2"
									},
									"scope": 227,
									"src": "1190:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0178b8bf",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resolver",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1286:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 190,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:14:2"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1323:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:9:2"
									},
									"scope": 227,
									"src": "1268:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02571be3",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1353:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:14:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1390:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:9:2"
									},
									"scope": 227,
									"src": "1338:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ebcb34ba",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "zecreyPubKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1427:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:14:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1464:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:9:2"
									},
									"scope": 227,
									"src": "1405:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f79fe538",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recordExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1501:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:14:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1538:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1538:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:6:2"
									},
									"scope": 227,
									"src": "1479:65:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "212a6bcd",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "subNodeRecordExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1579:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "label",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1593:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:29:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1631:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:6:2"
									},
									"scope": 227,
									"src": "1550:87:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 228,
							"src": "72:1568:2"
						}
					],
					"src": "47:1594:2"
				},
				"id": 2
			},
			"contracts/ZNSFIFSRegistrar.sol": {
				"ast": {
					"absolutePath": "contracts/ZNSFIFSRegistrar.sol",
					"exportedSymbols": {
						"IBaseRegistrar": [
							49
						],
						"Names": [
							707
						],
						"Ownable": [
							109
						],
						"ZNS": [
							227
						],
						"ZNSFIFSRegistrar": [
							533
						]
					},
					"id": 534,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 229,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "47:23:3"
						},
						{
							"absolutePath": "contracts/ZNS.sol",
							"file": "./ZNS.sol",
							"id": 230,
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 228,
							"src": "72:19:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBaseRegistrar.sol",
							"file": "./IBaseRegistrar.sol",
							"id": 231,
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 50,
							"src": "92:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 232,
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 110,
							"src": "123:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Names.sol",
							"file": "./utils/Names.sol",
							"id": 233,
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 708,
							"src": "147:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 235,
										"name": "IBaseRegistrar",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 49,
										"src": "316:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBaseRegistrar_$49",
											"typeString": "contract IBaseRegistrar"
										}
									},
									"id": 236,
									"nodeType": "InheritanceSpecifier",
									"src": "316:14:3"
								},
								{
									"baseName": {
										"id": 237,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "332:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 238,
									"nodeType": "InheritanceSpecifier",
									"src": "332:7:3"
								}
							],
							"contractDependencies": [
								49,
								109
							],
							"contractKind": "contract",
							"documentation": {
								"id": 234,
								"nodeType": "StructuredDocumentation",
								"src": "176:110:3",
								"text": " ZNSFIFSRegistrar is a registrar allocating subdomain names to users in Zecrey-Legend in a FIFS way."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								109,
								49
							],
							"name": "ZNSFIFSRegistrar",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 241,
									"libraryName": {
										"id": 239,
										"name": "Names",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 707,
										"src": "353:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Names_$707",
											"typeString": "library Names"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "347:23:3",
									"typeName": {
										"id": 240,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "363:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "58ffb7fd",
									"id": 243,
									"mutability": "mutable",
									"name": "zns",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "396:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ZNS_$227",
										"typeString": "contract ZNS"
									},
									"typeName": {
										"id": 242,
										"name": "ZNS",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 227,
										"src": "396:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ZNS_$227",
											"typeString": "contract ZNS"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ddf7fcb0",
									"id": 245,
									"mutability": "mutable",
									"name": "baseNode",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "496:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 244,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "496:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da8c229e",
									"id": 249,
									"mutability": "mutable",
									"name": "controllers",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "617:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 248,
										"keyType": {
											"id": 246,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "625:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "617:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 247,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "636:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 253,
									"mutability": "mutable",
									"name": "ZNSZecreyPubKeyMapper",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "780:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
										"typeString": "mapping(bytes32 => bytes32)"
									},
									"typeName": {
										"id": 252,
										"keyType": {
											"id": 250,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "788:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "780:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
											"typeString": "mapping(bytes32 => bytes32)"
										},
										"valueType": {
											"id": 251,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "799:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "860:60:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 256,
																"name": "controllers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "878:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 259,
															"indexExpression": {
																"expression": {
																	"id": 257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "890:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "890:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "878:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "870:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "870:32:3"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "912:1:3"
											}
										]
									},
									"id": 264,
									"name": "onlyController",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:3"
									},
									"src": "836:84:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "940:73:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 269,
																		"name": "baseNode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "968:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 267,
																		"name": "zns",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "958:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ZNS_$227",
																			"typeString": "contract ZNS"
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 203,
																	"src": "958:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32) view external returns (address)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "958:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 273,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "989:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ZNSFIFSRegistrar_$533",
																			"typeString": "contract ZNSFIFSRegistrar"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ZNSFIFSRegistrar_$533",
																			"typeString": "contract ZNSFIFSRegistrar"
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "981:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 271,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "981:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "981:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "958:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "950:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "950:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "950:45:3"
											},
											{
												"id": 278,
												"nodeType": "PlaceholderStatement",
												"src": "1005:1:3"
											}
										]
									},
									"id": 280,
									"name": "live",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:3"
									},
									"src": "926:87:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1262:204:3",
										"statements": [
											{
												"assignments": [
													286,
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "_znsAddr",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "1273:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 285,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1273:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "_node",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "1291:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 287,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1291:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"id": 291,
															"name": "initializationParameters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1319:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1346:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1346:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1355:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 294,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1355:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 296,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1345:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$",
																"typeString": "tuple(type(address),type(bytes32))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes32_$_$",
																"typeString": "tuple(type(address),type(bytes32))"
															}
														],
														"expression": {
															"id": 289,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1308:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1308:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_bytes32_$",
														"typeString": "tuple(address payable,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:92:3"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "zns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1374:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ZNS_$227",
															"typeString": "contract ZNS"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 301,
																"name": "_znsAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1384:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 300,
															"name": "ZNS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "1380:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ZNS_$227_$",
																"typeString": "type(contract ZNS)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1380:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ZNS_$227",
															"typeString": "contract ZNS"
														}
													},
													"src": "1374:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ZNS_$227",
														"typeString": "contract ZNS"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "1374:19:3"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "baseNode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1403:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "_node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "1414:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1403:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "1403:16:3"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 309,
															"name": "controllers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1429:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 312,
														"indexExpression": {
															"expression": {
																"id": 310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1441:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1441:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1429:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1455:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1429:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1429:30:3"
											}
										]
									},
									"functionSelector": "439fab91",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "initializationParameters",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1212:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:41:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:0:3"
									},
									"scope": 533,
									"src": "1192:274:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										24
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1608:91:3",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "controllers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1618:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 327,
														"indexExpression": {
															"id": 326,
															"name": "_controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1630:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1618:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1645:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1618:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1618:31:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 332,
															"name": "_controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1680:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "ControllerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1664:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1664:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "EmitStatement",
												"src": "1659:33:3"
											}
										]
									},
									"functionSelector": "a7fc7a07",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 323,
											"modifierName": {
												"id": 322,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "1598:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1598:9:3"
										}
									],
									"name": "addController",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 321,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1589:8:3"
									},
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1559:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:21:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1608:0:3"
									},
									"scope": 533,
									"src": "1536:163:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										29
									],
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1832:94:3",
										"statements": [
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 344,
															"name": "controllers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1842:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 346,
														"indexExpression": {
															"id": 345,
															"name": "_controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1854:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1842:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1869:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1842:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1842:32:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 351,
															"name": "_controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1907:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "ControllerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1889:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "EmitStatement",
												"src": "1884:35:3"
											}
										]
									},
									"functionSelector": "f6a74ed7",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"modifierName": {
												"id": 341,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "1822:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1822:9:3"
										}
									],
									"name": "removeController",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1813:8:3"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "_controller",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1783:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:21:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:0:3"
									},
									"scope": 533,
									"src": "1757:169:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2116:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "baseNode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2142:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 367,
															"name": "_resolver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2152:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 363,
															"name": "zns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2126:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ZNS_$227",
																"typeString": "contract ZNS"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setResolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "2126:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) external"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2126:36:3"
											}
										]
									},
									"functionSelector": "7a0d942b",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 361,
											"modifierName": {
												"id": 360,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "2106:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2106:9:3"
										}
									],
									"name": "setThisResolver",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2097:8:3"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "_resolver",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2069:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:19:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2116:0:3"
									},
									"scope": 533,
									"src": "2044:125:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2363:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "baseNode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2393:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 383,
															"name": "_zecreyPubKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2403:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 379,
															"name": "zns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2373:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ZNS_$227",
																"typeString": "contract ZNS"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setZecreyPubKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "2373:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32) external"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2373:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2373:44:3"
											}
										]
									},
									"functionSelector": "5b817475",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 377,
											"modifierName": {
												"id": 376,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "2353:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2353:9:3"
										}
									],
									"name": "setZecreyPubKey",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 375,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2344:8:3"
									},
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2312:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:23:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:3"
									},
									"scope": 533,
									"src": "2287:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "2493:39:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "node",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "2520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 394,
															"name": "zns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2510:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ZNS_$227",
																"typeString": "contract ZNS"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 203,
														"src": "2510:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) view external returns (address)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2510:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 393,
												"id": 398,
												"nodeType": "Return",
												"src": "2503:22:3"
											}
										]
									},
									"functionSelector": "deb931a2",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "node",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2448:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:14:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2485:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:9:3"
									},
									"scope": 533,
									"src": "2430:102:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "2910:683:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 415,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "2974:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"id": 414,
																"name": "_valid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "2967:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (string memory) pure returns (bool)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2967:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206e616d65",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2982:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7699fec74151ec3258cb40855eb01e04ecc653b9b0928de8e166216424a869b",
																"typeString": "literal_string \"invalid name\""
															},
															"value": "invalid name"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7699fec74151ec3258cb40855eb01e04ecc653b9b0928de8e166216424a869b",
																"typeString": "literal_string \"invalid name\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2959:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2959:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "2959:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 422,
																	"name": "_zecreyPubKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "3090:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 421,
																"name": "_validZecreyPubKey",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3071:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32) view returns (bool)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3071:33:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c32206f776e65722065786973746564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3106:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0dba587fb8b1bd1fb1f026fd1482c62e1b33ca88abdbd50f7a6efd27a49efb1",
																"typeString": "literal_string \"L2 owner existed\""
															},
															"value": "L2 owner existed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0dba587fb8b1bd1fb1f026fd1482c62e1b33ca88abdbd50f7a6efd27a49efb1",
																"typeString": "literal_string \"L2 owner existed\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3063:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "3063:62:3"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "label",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "3165:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 427,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3165:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 432,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3197:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3191:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 430,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3191:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3191:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 429,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3181:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3165:39:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3278:41:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "baseNode",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "3303:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 440,
																		"name": "label",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "3313:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 437,
																		"name": "zns",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "3279:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ZNS_$227",
																			"typeString": "contract ZNS"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "subNodeRecordExists",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 226,
																	"src": "3279:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (bytes32,bytes32) view external returns (bool)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3279:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7375626e6f64652065786973746564",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b915cf9edca8f30cba97949d59537f01c0e16ae93c450c26f788ad27247cab17",
																"typeString": "literal_string \"subnode existed\""
															},
															"value": "subnode existed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b915cf9edca8f30cba97949d59537f01c0e16ae93c450c26f788ad27247cab17",
																"typeString": "literal_string \"subnode existed\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3270:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "3270:69:3"
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "subnode",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "3350:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 446,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"arguments": [
														{
															"id": 450,
															"name": "baseNode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3388:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 451,
															"name": "label",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "3398:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 452,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3405:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "_zecreyPubKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "3413:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 448,
															"name": "zns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "3368:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ZNS_$227",
																"typeString": "contract ZNS"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setSubnodeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 168,
														"src": "3368:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,address,bytes32) external returns (bytes32)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3368:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3350:77:3"
											},
											{
												"expression": {
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 456,
															"name": "ZNSZecreyPubKeyMapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3472:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 458,
														"indexExpression": {
															"id": 457,
															"name": "_zecreyPubKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "3494:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3472:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 459,
														"name": "subnode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3511:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3472:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "3472:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 463,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3548:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 464,
															"name": "subnode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "3555:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 465,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3564:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "_zecreyPubKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "3572:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 462,
														"name": "ZNSRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3534:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (string memory,bytes32,address,bytes32)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3534:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "EmitStatement",
												"src": "3529:57:3"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2538:251:3",
										"text": " @dev Register a new node under base node if it not exists.\n @param _name The plaintext of the name to register\n @param _owner The address to receive this name\n @param _zecreyPubKey The L2 owner to receive this name"
									},
									"functionSelector": "d7757da1",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 411,
											"modifierName": {
												"id": 410,
												"name": "onlyController",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 264,
												"src": "2895:14:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2895:14:3"
										}
									],
									"name": "registerZNS",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 409,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2886:8:3"
									},
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2815:21:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2815:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2838:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2838:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2854:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 406,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:62:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2910:0:3"
									},
									"scope": 533,
									"src": "2794:799:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "3665:67:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 478,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "3696:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 477,
															"name": "_validCharset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3682:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (string memory) pure returns (bool)"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3682:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 481,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "3719:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 480,
															"name": "_validLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3706:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (string memory) pure returns (bool)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3706:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3682:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 476,
												"id": 484,
												"nodeType": "Return",
												"src": "3675:50:3"
											}
										]
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_valid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "3615:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:21:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "3659:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3659:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3658:6:3"
									},
									"scope": 533,
									"src": "3599:133:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "3811:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 493,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3828:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "charsetValid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 680,
														"src": "3828:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bool_$bound_to$_t_string_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bool)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3828:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 496,
												"nodeType": "Return",
												"src": "3821:27:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validCharset",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "3761:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3761:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3760:21:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "3805:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3805:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:6:3"
									},
									"scope": 533,
									"src": "3738:117:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "3933:67:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 505,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "3950:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "strlen",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 632,
																"src": "3950:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_string_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (uint256)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3950:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "33",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3968:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "3950:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 510,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "3973:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "strlen",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 632,
																"src": "3973:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_string_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3973:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "3332",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3991:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "3973:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3950:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 504,
												"id": 516,
												"nodeType": "Return",
												"src": "3943:50:3"
											}
										]
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3883:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3883:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:21:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3927:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3927:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:6:3"
									},
									"scope": 533,
									"src": "3861:139:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "4086:67:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 525,
															"name": "ZNSZecreyPubKeyMapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4103:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "_zecreyPubKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4125:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4103:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "307830",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4143:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0x0"
													},
													"src": "4103:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 524,
												"id": 530,
												"nodeType": "Return",
												"src": "4096:50:3"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validZecreyPubKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "_zecreyPubKey",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4034:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 519,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4033:23:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4080:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4080:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:6:3"
									},
									"scope": 533,
									"src": "4006:147:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 534,
							"src": "287:3868:3"
						}
					],
					"src": "47:4109:3"
				},
				"id": 3
			},
			"contracts/utils/Names.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Names.sol",
					"exportedSymbols": {
						"Names": [
							707
						]
					},
					"id": 708,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "47:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "Names",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "359:547:4",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "369:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "369:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"nodeType": "VariableDeclarationStatement",
												"src": "369:8:4"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "387:6:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "387:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"hexValue": "30",
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "396:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "387:10:4"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "bytelength",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "407:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "407:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 554,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "431:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "425:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 552,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "425:5:4",
																"typeDescriptions": {}
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "425:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "425:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "407:33:4"
											},
											{
												"body": {
													"id": 627,
													"nodeType": "Block",
													"src": "486:394:4",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 627,
																	"src": "500:8:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "bytes1",
																		"nodeType": "ElementaryTypeName",
																		"src": "500:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 576,
															"initialValue": {
																"baseExpression": {
																	"arguments": [
																		{
																			"id": 572,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "517:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "511:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 570,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "511:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "511:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 575,
																"indexExpression": {
																	"id": 574,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "520:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "511:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "500:22:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 577,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "539:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "30783830",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "544:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "539:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 585,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "599:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30784530",
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "603:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "0xE0"
																	},
																	"src": "599:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 593,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "658:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30784630",
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "662:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_240_by_1",
																				"typeString": "int_const 240"
																			},
																			"value": "0xF0"
																		},
																		"src": "658:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			},
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 601,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 569,
																				"src": "717:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30784638",
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "721:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_248_by_1",
																					"typeString": "int_const 248"
																				},
																				"value": "0xF8"
																			},
																			"src": "717:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 609,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "776:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"hexValue": "30784643",
																					"id": 610,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "780:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_252_by_1",
																						"typeString": "int_const 252"
																					},
																					"value": "0xFC"
																				},
																				"src": "776:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 621,
																				"nodeType": "Block",
																				"src": "831:39:4",
																				"statements": [
																					{
																						"expression": {
																							"id": 619,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 617,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 547,
																								"src": "849:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"hexValue": "36",
																								"id": 618,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "854:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"src": "849:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 620,
																						"nodeType": "ExpressionStatement",
																						"src": "849:6:4"
																					}
																				]
																			},
																			"id": 622,
																			"nodeType": "IfStatement",
																			"src": "772:98:4",
																			"trueBody": {
																				"id": 616,
																				"nodeType": "Block",
																				"src": "786:39:4",
																				"statements": [
																					{
																						"expression": {
																							"id": 614,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 612,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 547,
																								"src": "804:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"hexValue": "35",
																								"id": 613,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "809:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "804:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 615,
																						"nodeType": "ExpressionStatement",
																						"src": "804:6:4"
																					}
																				]
																			}
																		},
																		"id": 623,
																		"nodeType": "IfStatement",
																		"src": "713:157:4",
																		"trueBody": {
																			"id": 608,
																			"nodeType": "Block",
																			"src": "727:39:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 606,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 604,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 547,
																							"src": "745:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"hexValue": "34",
																							"id": 605,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "750:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "745:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 607,
																					"nodeType": "ExpressionStatement",
																					"src": "745:6:4"
																				}
																			]
																		}
																	},
																	"id": 624,
																	"nodeType": "IfStatement",
																	"src": "654:216:4",
																	"trueBody": {
																		"id": 600,
																		"nodeType": "Block",
																		"src": "668:39:4",
																		"statements": [
																			{
																				"expression": {
																					"id": 598,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 596,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 547,
																						"src": "686:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "33",
																						"id": 597,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "691:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "686:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 599,
																				"nodeType": "ExpressionStatement",
																				"src": "686:6:4"
																			}
																		]
																	}
																},
																"id": 625,
																"nodeType": "IfStatement",
																"src": "595:275:4",
																"trueBody": {
																	"id": 592,
																	"nodeType": "Block",
																	"src": "609:39:4",
																	"statements": [
																		{
																			"expression": {
																				"id": 590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 588,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 547,
																					"src": "627:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"hexValue": "32",
																					"id": 589,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "632:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "627:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 591,
																			"nodeType": "ExpressionStatement",
																			"src": "627:6:4"
																		}
																	]
																}
															},
															"id": 626,
															"nodeType": "IfStatement",
															"src": "536:334:4",
															"trueBody": {
																"id": 584,
																"nodeType": "Block",
																"src": "550:39:4",
																"statements": [
																	{
																		"expression": {
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 580,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 547,
																				"src": "568:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "573:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "568:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 583,
																		"nodeType": "ExpressionStatement",
																		"src": "568:6:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 562,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "463:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 563,
														"name": "bytelength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "467:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "463:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"initializationExpression": {
													"expression": {
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 558,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "454:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "460:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "454:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ExpressionStatement",
													"src": "454:7:4"
												},
												"loopExpression": {
													"expression": {
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "479:5:4",
														"subExpression": {
															"id": 565,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "479:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 567,
													"nodeType": "ExpressionStatement",
													"src": "479:5:4"
												},
												"nodeType": "ForStatement",
												"src": "450:430:4"
											},
											{
												"expression": {
													"id": 629,
													"name": "len",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "896:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 542,
												"id": 630,
												"nodeType": "Return",
												"src": "889:10:4"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "93:199:4",
										"text": " @dev Returns the length of a given string, the length of each byte is self defined\n @param s The string to measure the length of\n @return The length of the input string"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "strlen",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "313:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 537,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:17:4"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "353:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "353:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:6:4"
									},
									"scope": 707,
									"src": "297:609:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1173:247:4",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "bytelength",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "1183:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1183:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 644,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "1207:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1201:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 642,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "1201:5:4",
																"typeDescriptions": {}
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1201:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1201:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1183:33:4"
											},
											{
												"body": {
													"id": 675,
													"nodeType": "Block",
													"src": "1263:130:4",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "1277:8:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "bytes1",
																		"nodeType": "ElementaryTypeName",
																		"src": "1277:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 666,
															"initialValue": {
																"baseExpression": {
																	"arguments": [
																		{
																			"id": 662,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "1294:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1288:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 660,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1288:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1288:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "1297:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1288:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1277:22:4"
														},
														{
															"condition": {
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1316:20:4",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 668,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "1334:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 667,
																		"name": "isValidCharacter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 706,
																		"src": "1317:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_bool_$",
																			"typeString": "function (bytes1) pure returns (bool)"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1317:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "1313:70:4",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "1338:45:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1363:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 639,
																		"id": 672,
																		"nodeType": "Return",
																		"src": "1356:12:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "1242:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 653,
														"name": "bytelength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "1246:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1242:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"initializationExpression": {
													"assignments": [
														649
													],
													"declarations": [
														{
															"constant": false,
															"id": 649,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 676,
															"src": "1230:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 648,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1230:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 651,
													"initialValue": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1239:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1230:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1258:3:4",
														"subExpression": {
															"id": 655,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "1258:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 657,
													"nodeType": "ExpressionStatement",
													"src": "1258:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1226:167:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1409:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 639,
												"id": 678,
												"nodeType": "Return",
												"src": "1402:11:4"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "912:188:4",
										"text": " @dev Returns if the char in this string is valid, the valid char set is self defined\n @param s The string to validate\n @return The length of the input string"
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "charsetValid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1127:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1127:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:17:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1167:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1167:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:6:4"
									},
									"scope": 707,
									"src": "1105:315:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "1550:133:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "bs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "1568:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "30783339",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1574:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57_by_1",
																			"typeString": "int_const 57"
																		},
																		"value": "0x39"
																	},
																	"src": "1568:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 690,
																		"name": "bs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "1582:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30783330",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1588:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "0x30"
																	},
																	"src": "1582:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1568:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 694,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1567:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 695,
																		"name": "bs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "1630:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "30783741",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1636:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_122_by_1",
																			"typeString": "int_const 122"
																		},
																		"value": "0x7A"
																	},
																	"src": "1630:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 698,
																		"name": "bs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "1644:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30783631",
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1650:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_97_by_1",
																			"typeString": "int_const 97"
																		},
																		"value": "0x61"
																	},
																	"src": "1644:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1630:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 702,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1629:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1567:88:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 686,
												"id": 704,
												"nodeType": "Return",
												"src": "1560:95:4"
											}
										]
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidCharacter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "bs",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1510:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 681,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "1510:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:11:4"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1544:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1544:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:6:4"
									},
									"scope": 707,
									"src": "1484:199:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 708,
							"src": "72:1613:4"
						}
					],
					"src": "47:1639:4"
				},
				"id": 4
			}
		}
	}
}